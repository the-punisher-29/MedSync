{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport initializeAuthentication from '../config/firebase';\nimport { db, collection, getDocs } from '../config/firebase';\n//initialize firebase  authentication\ninitializeAuthentication();\nconst useFirebase = () => {\n  _s();\n  const [user, setUser] = useState({});\n  const auth = getAuth();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n\n  //on State Change \n  useEffect(() => {\n    const unsubscribed = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n      setIsLoading(false);\n    });\n    return () => unsubscribed;\n  }, [auth]);\n\n  //sign up functionality\n  const signUpUser = async (email, password, name) => {\n    setIsLoading(true);\n    try {\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n\n      // Update the user profile with only the display name\n      await updateProfile(auth.currentUser, {\n        displayName: name\n      });\n\n      // Directly log the user in after signup\n      setUser(res.user);\n\n      // Show success message\n      swal(\"Good job!\", \"Account has been created!\", \"success\");\n\n      // Redirect to home\n      history.push('/');\n      window.scrollTo(0, 100);\n    } catch (err) {\n      swal(\"Something went wrong!\", `${err.message}`, \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  //sign in functionality\n  const signInUser = async (email, password) => {\n    setIsLoading(true);\n    await signInWithEmailAndPassword(auth, email, password).then(res => {\n      setUser(res.user);\n      swal(\"Sign in Successful!\", \"Welcome back !\", \"info\");\n      history.push('/');\n      window.scrollTo(0, 100);\n    }).catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\")).finally(() => setIsLoading(false));\n  };\n\n  //google sign in \n  const signInWithGoogle = async () => {\n    setIsLoading(true);\n    const googleProvider = new GoogleAuthProvider();\n    await signInWithPopup(auth, googleProvider).then(res => {\n      setUser(res.user);\n      swal(\"Good job!\", \"Account has been created!\", \"success\");\n      history.push('/');\n    }).catch(err => console.log(err.message)).finally(() => setIsLoading(false));\n  };\n\n  // sign out \n  const signOutUser = async () => {\n    setIsLoading(true);\n    await signOut(auth).then(() => {\n      setUser({});\n      swal(\"Logout Successful!\", \"You are logged out!\", \"success\");\n      history.push('/signin');\n    }).catch(err => {\n      swal(\"Something went wrong!\", `${err.message}`, \"error\");\n    }).finally(() => setIsLoading(false));\n  };\n  // Fetch medicines\n  const getMedicines = async () => {\n    const medicinesCol = collection(db, 'medicines'); // Reference to the 'medicines' collection\n    const medicinesSnapshot = await getDocs(medicinesCol); // Get documents from the collection\n    return medicinesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    })); // Map the data to a more usable format\n  };\n\n  // Fetch orders\n  const getOrders = async () => {\n    const ordersCol = collection(db, 'orders'); // Reference to the 'orders' collection\n    const ordersSnapshot = await getDocs(ordersCol); // Get documents from the collection\n    return ordersSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  };\n\n  // Fetch suppliers\n  const getSuppliers = async () => {\n    const suppliersCol = collection(db, 'suppliers'); // Reference to the 'suppliers' collection\n    const suppliersSnapshot = await getDocs(suppliersCol); // Get documents from the collection\n    return suppliersSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  };\n\n  // Fetch sales\n  const getSales = async () => {\n    const salesCol = collection(db, 'sales'); // Reference to the 'sales' collection\n    const salesSnapshot = await getDocs(salesCol); // Get documents from the collection\n    return salesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  };\n\n  // Function to fetch messages\n  const getMessages = async () => {\n    try {\n      const messagesCollection = collection(db, 'messages'); // Replace 'messages' with your collection name\n      const messageSnapshot = await getDocs(messagesCollection);\n      const messages = messageSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      return messages;\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n      return [];\n    }\n  };\n  return {\n    user,\n    signInUser,\n    signUpUser,\n    signOutUser,\n    signInWithGoogle,\n    isLoading,\n    getMedicines,\n    getOrders,\n    getSuppliers,\n    getSales,\n    getMessages\n  };\n};\n_s(useFirebase, \"o9TOeKgZZnjpaHY94AVr78qCgsc=\", false, function () {\n  return [useHistory];\n});\nexport default useFirebase;","map":{"version":3,"names":["createUserWithEmailAndPassword","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithEmailAndPassword","signInWithPopup","signOut","updateProfile","useEffect","useState","useHistory","swal","initializeAuthentication","db","collection","getDocs","useFirebase","_s","user","setUser","auth","history","isLoading","setIsLoading","unsubscribed","signUpUser","email","password","name","res","currentUser","displayName","push","window","scrollTo","err","message","signInUser","then","catch","finally","signInWithGoogle","googleProvider","console","log","signOutUser","getMedicines","medicinesCol","medicinesSnapshot","docs","map","doc","id","data","getOrders","ordersCol","ordersSnapshot","getSuppliers","suppliersCol","suppliersSnapshot","getSales","salesCol","salesSnapshot","getMessages","messagesCollection","messageSnapshot","messages","error"],"sources":["/Users/arman_gupta/Documents/GitHub/MedSync/src/hooks/useFirebase.js"],"sourcesContent":["import { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport initializeAuthentication from '../config/firebase';\nimport { db, collection, getDocs } from '../config/firebase'; \n//initialize firebase  authentication\ninitializeAuthentication()\n\nconst useFirebase = () => {\n    const [user, setUser] = useState({});\n    const auth = getAuth();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(true);\n\n    //on State Change \n    useEffect(() => {\n        const unsubscribed = onAuthStateChanged(auth, user => {\n            if (user) {\n                setUser(user)\n            }else{\n                setUser({})\n            }\n            setIsLoading(false);\n        })\n        return () => unsubscribed;\n\n    }, [auth])\n\n\n    //sign up functionality\n    const signUpUser = async (email, password, name) => {\n        setIsLoading(true);\n        try {\n            const res = await createUserWithEmailAndPassword(auth, email, password);\n            \n            // Update the user profile with only the display name\n            await updateProfile(auth.currentUser, {\n                displayName: name,\n            });\n            \n            // Directly log the user in after signup\n            setUser(res.user);\n            \n            // Show success message\n            swal(\"Good job!\", \"Account has been created!\", \"success\");\n    \n            // Redirect to home\n            history.push('/');\n            window.scrollTo(0, 100);\n        } catch (err) {\n            swal(\"Something went wrong!\", `${err.message}`, \"error\");\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    \n\n    //sign in functionality\n    const signInUser = async (email, password) => {\n        setIsLoading(true);\n        await signInWithEmailAndPassword(auth, email, password)\n            .then(res => {\n                setUser(res.user);\n                swal(\"Sign in Successful!\", \"Welcome back !\", \"info\")\n                history.push('/');\n                                    window.scrollTo(0, 100);\n\n            })\n            .catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\")).finally(() => setIsLoading(false));\n    }\n\n    //google sign in \n    const signInWithGoogle = async () => {\n        setIsLoading(true);\n        const googleProvider = new GoogleAuthProvider();\n        await signInWithPopup(auth, googleProvider)\n            .then(res => {\n                setUser(res.user);\n                swal(\"Good job!\", \"Account has been created!\", \"success\");\n                history.push('/');\n            }).catch(err => console.log(err.message)).finally(() => setIsLoading(false));\n    }\n\n\n    // sign out \n    const signOutUser = async () => {\n        setIsLoading(true);\n        await signOut(auth).then(() => {\n            setUser({});\n            swal(\"Logout Successful!\", \"You are logged out!\", \"success\");\n            history.push('/signin')\n        }).catch((err) => {\n            swal(\"Something went wrong!\", `${err.message}`, \"error\")\n        }).finally(() => setIsLoading(false));\n\n    }\n// Fetch medicines\nconst getMedicines = async () => {\n    const medicinesCol = collection(db, 'medicines');  // Reference to the 'medicines' collection\n    const medicinesSnapshot = await getDocs(medicinesCol);  // Get documents from the collection\n    return medicinesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));  // Map the data to a more usable format\n};\n\n// Fetch orders\nconst getOrders = async () => {\n    const ordersCol = collection(db, 'orders');  // Reference to the 'orders' collection\n    const ordersSnapshot = await getDocs(ordersCol);  // Get documents from the collection\n    return ordersSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n};\n\n// Fetch suppliers\nconst getSuppliers = async () => {\n    const suppliersCol = collection(db, 'suppliers');  // Reference to the 'suppliers' collection\n    const suppliersSnapshot = await getDocs(suppliersCol);  // Get documents from the collection\n    return suppliersSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n};\n\n// Fetch sales\nconst getSales = async () => {\n    const salesCol = collection(db, 'sales');  // Reference to the 'sales' collection\n    const salesSnapshot = await getDocs(salesCol);  // Get documents from the collection\n    return salesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n};\n    \n    // Function to fetch messages\n    const getMessages = async () => {\n        try {\n            const messagesCollection = collection(db, 'messages'); // Replace 'messages' with your collection name\n            const messageSnapshot = await getDocs(messagesCollection);\n            const messages = messageSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n            return messages;\n        } catch (error) {\n            console.error(\"Error fetching messages:\", error);\n            return [];\n        }\n    };\n\n    return {\n        user,\n        signInUser,\n        signUpUser,\n        signOutUser,\n        signInWithGoogle,\n        isLoading,\n        getMedicines,\n        getOrders,\n        getSuppliers,\n        getSales,\n        getMessages\n    };\n}\n\nexport default useFirebase\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}