{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { TransitionDefaults, withDelay } from \"./transition-utils\";\nvar variants = {\n  exit: _ref => {\n    var _transition$exit;\n    var {\n      reverse,\n      initialScale,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n    return _extends({\n      opacity: 0\n    }, reverse ? {\n      scale: initialScale,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    } : {\n      transitionEnd: _extends({\n        scale: initialScale\n      }, transitionEnd == null ? void 0 : transitionEnd.exit)\n    }, {\n      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay)\n    });\n  },\n  enter: _ref2 => {\n    var _transition$enter;\n    var {\n      transitionEnd,\n      transition,\n      delay\n    } = _ref2;\n    return {\n      opacity: 1,\n      scale: 1,\n      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nexport var scaleFadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants\n};\nexport var ScaleFade = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"reverse\", \"initialScale\", \"className\", \"transition\", \"transitionEnd\", \"delay\"]);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    initialScale,\n    reverse,\n    transition,\n    transitionEnd,\n    delay\n  };\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-offset-slide\", className)\n  }, scaleFadeConfig, {\n    animate: animate,\n    custom: custom\n  }, rest)));\n});\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\";\n}","map":{"version":3,"sources":["../../src/scale-fade.tsx"],"names":["cx","__DEV__","AnimatePresence","motion","React","TransitionDefaults","withDelay","variants","exit","reverse","initialScale","transition","transitionEnd","delay","opacity","scale","enter","scaleFadeConfig","initial","animate","ScaleFade","forwardRef","props","ref","unmountOnExit","in","isOpen","className","rest","show","custom","displayName"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  TransitionDefaults,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface ScaleFadeOptions {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<ScaleFadeOptions> = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...(reverse\n      ? { scale: initialScale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } }),\n    transition:\n      transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TransitionDefaults.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface ScaleFadeProps\n  extends ScaleFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const ScaleFade = React.forwardRef<HTMLDivElement, ScaleFadeProps>(\n  (props, ref) => {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { initialScale, reverse, transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...scaleFadeConfig}\n            animate={animate}\n            custom={custom}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\"\n}\n"]},"metadata":{},"sourceType":"module"}