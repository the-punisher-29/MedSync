{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n */\nexport var Container = /*#__PURE__*/forwardRef((props, ref) => {\n  var _omitThemingProps = omitThemingProps(props),\n    {\n      className,\n      centerContent\n    } = _omitThemingProps,\n    rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"centerContent\"]);\n  var styles = useStyleConfig(\"Container\", props);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-container\", className)\n  }, rest, {\n    __css: _extends({}, styles, centerContent && {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    })\n  }));\n});\nif (__DEV__) {\n  Container.displayName = \"Container\";\n}","map":{"version":3,"sources":["../../src/container.tsx"],"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","__DEV__","React","Container","props","ref","className","centerContent","rest","styles","display","flexDirection","alignItems","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAKEC,cALF,QAOO,mBAPP;AAQA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,SAAS,GAAA,aAAGN,UAAU,CAAwB,CAACO,KAAD,EAAQC,GAAR,KAAgB;EACzE,IAAA,iBAAA,GAA8CP,gBAAgB,CAACM,KAAD,CAA9D;IAAM;MAAEE,SAAF;MAAaC;IAAb,CAAN,GAAA,iBAAA;IAAqCC,IAArC,GAAA,6BAAA,CAAA,iBAAA,EAAA,CAAA,WAAA,EAAA,eAAA,CAAA,CAAA;EAEA,IAAMC,MAAM,GAAGV,cAAc,CAAC,WAAD,EAAcK,KAAd,CAA7B;EAEA,OAAA,aACE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAQ,GAAR,EAAA,QAAA,CAAA;IACE,GAAG,EAAEC,GADP;IAEE,SAAS,EAAEL,EAAE,CAAC,kBAAD,EAAqBM,SAArB;EAFf,CAAA,EAGME,IAHN,EAAA;IAIE,KAAK,EAAA,QAAA,CAAA,CAAA,CAAA,EACAC,MADA,EAECF,aAAa,IAAI;MACnBG,OAAO,EAAE,MADU;MAEnBC,aAAa,EAAE,QAFI;MAGnBC,UAAU,EAAE;IAHO,CAFlB;EAJP,CAAA,CAAA,CADF;AAeD,CApBkC,CAA5B;AAsBP,IAAIX,OAAJ,EAAa;EACXE,SAAS,CAACU,WAAVV,GAAwB,WAAxBA;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n */\nexport const Container = forwardRef<ContainerProps, \"div\">((props, ref) => {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nif (__DEV__) {\n  Container.displayName = \"Container\"\n}\n"]},"metadata":{},"sourceType":"module"}