{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\dbms_pro\\\\idea3\\\\Phami-Pharma-ReactJS\\\\src\\\\contexts\\\\OrderProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderContext = /*#__PURE__*/createContext();\n\nconst OrderProvider = ({\n  children\n}) => {\n  _s();\n\n  const [orders, setOrders] = useState([]); //handle cart \n\n  const handleCart = products => {\n    setOrders(prev => {\n      return [...prev, products];\n    });\n  }; //remove product\n\n\n  const removeProduct = id => {\n    setOrders(prev => {\n      return prev.filter(item => {\n        return item.id !== id;\n      });\n    });\n  };\n\n  const value = {\n    orders,\n    handleCart,\n    removeProduct\n  };\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderProvider, \"fJydDDvPVS5YoOOIxPLx2ckW3UY=\");\n\n_c = OrderProvider;\nexport default OrderProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"sources":["E:/Pr/Web D/dbms_pro/idea3/Phami-Pharma-ReactJS/src/contexts/OrderProvider.js"],"names":["React","createContext","useState","OrderContext","OrderProvider","children","orders","setOrders","handleCart","products","prev","removeProduct","id","filter","item","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;;AAEP,MAAMG,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CADkC,CAGlC;;AACA,QAAMM,UAAU,GAAIC,QAAD,IAAc;AAC7BF,IAAAA,SAAS,CAACG,IAAI,IAAI;AACd,aAAO,CACH,GAAGA,IADA,EAEHD,QAFG,CAAP;AAIH,KALQ,CAAT;AAMH,GAPD,CAJkC,CAalC;;;AACA,QAAME,aAAa,GAAIC,EAAD,IAAQ;AAC1BL,IAAAA,SAAS,CAAEG,IAAD,IAAU;AAChB,aAAOA,IAAI,CAACG,MAAL,CAAYC,IAAI,IAAI;AACvB,eAAOA,IAAI,CAACF,EAAL,KAAYA,EAAnB;AACH,OAFM,CAAP;AAGH,KAJQ,CAAT;AAKH,GAND;;AAQA,QAAMG,KAAK,GAAG;AACVT,IAAAA,MADU;AAEVE,IAAAA,UAFU;AAGVG,IAAAA;AAHU,GAAd;AAKA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEI,KAA9B;AAAA,cACKV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhCD;;GAAMD,a;;KAAAA,a;AAkCN,eAAeA,aAAf","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const OrderContext = createContext();\r\n\r\nconst OrderProvider = ({children}) => {\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    //handle cart \r\n    const handleCart = (products) => {\r\n        setOrders(prev => {\r\n            return [\r\n                ...prev,\r\n                products\r\n            ]\r\n        });\r\n    }\r\n\r\n    //remove product\r\n    const removeProduct = (id) => {\r\n        setOrders((prev) => {\r\n            return prev.filter(item => {\r\n                return item.id !== id\r\n            })\r\n        })\r\n    }\r\n\r\n    const value = {\r\n        orders, \r\n        handleCart,\r\n        removeProduct\r\n    }\r\n    return (\r\n        <OrderContext.Provider value={value}>\r\n            {children}\r\n        </OrderContext.Provider>\r\n    )\r\n}\r\n\r\nexport default OrderProvider\r\n"]},"metadata":{},"sourceType":"module"}