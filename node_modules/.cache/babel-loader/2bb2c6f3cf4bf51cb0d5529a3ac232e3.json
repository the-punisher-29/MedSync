{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { useBoolean, useCallbackRef, useControllableState, useId, useLatestRef, usePanGesture, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { ariaAttr, callAllHandlers, clampValue, dataAttr, focus, normalizeEventKey, percentToValue, roundValueToStep, valueToPercent } from \"@chakra-ui/utils\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { getIds, getIsReversed, getStyles, orient } from \"./slider-utils\";\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useRangeSlider(props) {\n  var {\n      min = 0,\n      max = 100,\n      onChange,\n      value: valueProp,\n      defaultValue,\n      isReversed: isReversedProp,\n      direction = \"ltr\",\n      orientation = \"horizontal\",\n      id: idProp,\n      isDisabled,\n      isReadOnly,\n      onChangeStart: onChangeStartProp,\n      onChangeEnd: onChangeEndProp,\n      step = 1,\n      getAriaValueText: getAriaValueTextProp,\n      \"aria-valuetext\": ariaValueText,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      name,\n      focusThumbOnChange = true,\n      minStepsBetweenThumbs = 0\n    } = props,\n    htmlProps = _objectWithoutPropertiesLoose(props, [\"min\", \"max\", \"onChange\", \"value\", \"defaultValue\", \"isReversed\", \"direction\", \"orientation\", \"id\", \"isDisabled\", \"isReadOnly\", \"onChangeStart\", \"onChangeEnd\", \"step\", \"getAriaValueText\", \"aria-valuetext\", \"aria-label\", \"aria-labelledby\", \"name\", \"focusThumbOnChange\", \"minStepsBetweenThumbs\"]);\n  var onChangeStart = useCallbackRef(onChangeStartProp);\n  var onChangeEnd = useCallbackRef(onChangeEndProp);\n  var getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  var isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation\n  });\n  var [valueState, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue != null ? defaultValue : [25, 75],\n    onChange\n  });\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\"[range-slider] You passed an invalid value for `value` or `defaultValue`, expected `Array` but got `\" + typeof valueState + \"`\");\n  }\n  var [isDragging, setDragging] = useBoolean();\n  var [isFocused, setFocused] = useBoolean();\n  var [activeIndex, setActiveIndex] = useState(-1);\n  var eventSourceRef = useRef(null);\n  var isInteractive = !(isDisabled || isReadOnly);\n  var initialValue = useRef(valueState);\n  var value = valueState.map(val => clampValue(val, min, max));\n  var valueRef = useLatestRef(value);\n  var spacing = minStepsBetweenThumbs * step;\n  var valueBounds = getValueBounds(value, min, max, spacing);\n  var reversedValue = value.map(val => max - val + min);\n  var thumbValues = isReversed ? reversedValue : value;\n  var thumbPercents = thumbValues.map(val => valueToPercent(val, min, max));\n  var isVertical = orientation === \"vertical\";\n  var [thumbRects, setThumbRects] = useState(Array.from({\n    length: value.length\n  }).map(() => ({\n    width: 0,\n    height: 0\n  })));\n  useEffect(() => {\n    var _rootRef$current;\n    if (!rootRef.current) return;\n    var thumbs = Array.from((_rootRef$current = rootRef.current) == null ? void 0 : _rootRef$current.querySelectorAll(\"[role=slider]\"));\n    var rects = thumbs.map(el => ({\n      width: el.offsetWidth,\n      height: el.offsetHeight\n    }));\n    if (rects.length) setThumbRects(rects);\n  }, []);\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n\n  var trackRef = useRef(null);\n  var rootRef = useRef(null);\n  var uuid = useId(idProp);\n  var ids = getIds(uuid);\n  var getValueFromPointer = useCallback(event => {\n    var _event$touches$, _event$touches;\n    if (!trackRef.current) return;\n    eventSourceRef.current = \"pointer\";\n    var rect = trackRef.current.getBoundingClientRect();\n    var {\n      clientX,\n      clientY\n    } = (_event$touches$ = (_event$touches = event.touches) == null ? void 0 : _event$touches[0]) != null ? _event$touches$ : event;\n    var diff = isVertical ? rect.bottom - clientY : clientX - rect.left;\n    var length = isVertical ? rect.height : rect.width;\n    var percent = diff / length;\n    if (isReversed) percent = 1 - percent;\n    return percentToValue(percent, min, max);\n  }, [isVertical, isReversed, max, min]);\n  var tenSteps = (max - min) / 10;\n  var oneStep = step || (max - min) / 100;\n  var actions = useMemo(() => ({\n    setValueAtIndex: (index, val) => {\n      if (!isInteractive) return;\n      var bounds = valueBounds[index];\n      val = parseFloat(roundValueToStep(val, bounds.min, oneStep));\n      val = clampValue(val, bounds.min, bounds.max);\n      var next = [...value];\n      next[index] = val;\n      setValue(next);\n    },\n    setActiveIndex,\n    stepUp: function stepUp(index, step) {\n      if (step === void 0) {\n        step = oneStep;\n      }\n      var valueAtIndex = value[index];\n      var next = isReversed ? valueAtIndex - step : valueAtIndex + step;\n      actions.setValueAtIndex(index, next);\n    },\n    stepDown: function stepDown(index, step) {\n      if (step === void 0) {\n        step = oneStep;\n      }\n      var valueAtIndex = value[index];\n      var next = isReversed ? valueAtIndex + step : valueAtIndex - step;\n      actions.setValueAtIndex(index, next);\n    },\n    reset: () => setValue(initialValue.current)\n  }), [oneStep, value, isReversed, setValue, isInteractive, valueBounds]);\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n\n  var onKeyDown = useCallback(event => {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      ArrowRight: () => actions.stepUp(activeIndex),\n      ArrowUp: () => actions.stepUp(activeIndex),\n      ArrowLeft: () => actions.stepDown(activeIndex),\n      ArrowDown: () => actions.stepDown(activeIndex),\n      PageUp: () => actions.stepUp(activeIndex, tenSteps),\n      PageDown: () => actions.stepDown(activeIndex, tenSteps),\n      Home: () => {\n        var {\n          min: value\n        } = valueBounds[activeIndex];\n        actions.setValueAtIndex(activeIndex, value);\n      },\n      End: () => {\n        var {\n          max: value\n        } = valueBounds[activeIndex];\n        actions.setValueAtIndex(activeIndex, value);\n      }\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      eventSourceRef.current = \"keyboard\";\n    }\n  }, [actions, activeIndex, tenSteps, valueBounds]);\n  /**\n   * Compute styles for all component parts.\n   */\n\n  var {\n    getThumbStyle,\n    rootStyle,\n    trackStyle,\n    innerTrackStyle\n  } = useMemo(() => getStyles({\n    isReversed,\n    orientation,\n    thumbRects,\n    thumbPercents\n  }), [isReversed, orientation, thumbPercents, thumbRects]);\n  var focusThumb = useCallback(index => {\n    var idx = index != null ? index : activeIndex;\n    if (idx !== -1 && focusThumbOnChange) {\n      var _rootRef$current2;\n      var id = ids.getThumb(idx);\n      var thumb = (_rootRef$current2 = rootRef.current) == null ? void 0 : _rootRef$current2.ownerDocument.getElementById(id);\n      if (thumb) {\n        setTimeout(() => focus(thumb));\n      }\n    }\n  }, [focusThumbOnChange, activeIndex, ids]);\n  useUpdateEffect(() => {\n    if (eventSourceRef.current === \"keyboard\") {\n      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n    }\n  }, [value, onChangeEnd]);\n  var onPanSessionStart = event => {\n    var pointValue = getValueFromPointer(event) || 0;\n    var distances = value.map(val => Math.abs(val - pointValue));\n    var isThumbStacked = new Set(distances).size !== distances.length;\n    var closest = Math.min(...distances);\n    var index = distances.indexOf(closest); // when two thumbs are stacked and the user clicks at a point larger than\n    // their values, pick the next closest thumb\n\n    if (isThumbStacked && pointValue > value[index]) {\n      index++;\n    }\n    setActiveIndex(index);\n    actions.setValueAtIndex(index, pointValue);\n    focusThumb(index);\n  };\n  var onPan = event => {\n    var pointValue = getValueFromPointer(event) || 0;\n    setActiveIndex(activeIndex);\n    actions.setValueAtIndex(activeIndex, pointValue);\n    focusThumb(activeIndex);\n  };\n  usePanGesture(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return;\n      setDragging.on();\n      onPanSessionStart(event);\n      onChangeStart == null ? void 0 : onChangeStart(valueRef.current);\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return;\n      setDragging.off();\n      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n    },\n    onPan(event) {\n      if (!isInteractive) return;\n      onPan(event);\n    }\n  });\n  var getRootProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (ref === void 0) {\n      ref = null;\n    }\n    return _extends({}, props, htmlProps, {\n      id: ids.root,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: _extends({}, props.style, rootStyle)\n    });\n  }, [htmlProps, isDisabled, isFocused, rootStyle, ids]);\n  var getTrackProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (ref === void 0) {\n      ref = null;\n    }\n    return _extends({}, props, {\n      ref: mergeRefs(ref, trackRef),\n      id: ids.track,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: _extends({}, props.style, trackStyle)\n    });\n  }, [isDisabled, trackStyle, ids]);\n  var getInnerTrackProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (ref === void 0) {\n      ref = null;\n    }\n    return _extends({}, props, {\n      ref,\n      id: ids.innerTrack,\n      style: _extends({}, props.style, innerTrackStyle)\n    });\n  }, [innerTrackStyle, ids]);\n  var getThumbProps = useCallback(function (props, ref) {\n    var _getAriaValueText;\n    if (ref === void 0) {\n      ref = null;\n    }\n    var {\n        index\n      } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"index\"]);\n    var _value = value[index];\n    if (_value == null) {\n      throw new TypeError(\"[range-slider > thumb] Cannot find value at index `\" + index + \"`. The `value` or `defaultValue` length is : \" + value.length);\n    }\n    var bounds = valueBounds[index];\n    return _extends({}, rest, {\n      ref,\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : undefined,\n      id: ids.getThumb(index),\n      \"data-active\": dataAttr(isDragging && activeIndex === index),\n      \"aria-valuetext\": (_getAriaValueText = getAriaValueText == null ? void 0 : getAriaValueText(_value)) != null ? _getAriaValueText : ariaValueText == null ? void 0 : ariaValueText[index],\n      \"aria-valuemin\": bounds.min,\n      \"aria-valuemax\": bounds.max,\n      \"aria-valuenow\": _value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel == null ? void 0 : ariaLabel[index],\n      \"aria-labelledby\": ariaLabel != null && ariaLabel[index] ? undefined : ariaLabelledBy == null ? void 0 : ariaLabelledBy[index],\n      style: _extends({}, props.style, getThumbStyle(index)),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, () => {\n        setFocused.on();\n        setActiveIndex(index);\n      }),\n      onBlur: callAllHandlers(props.onBlur, () => {\n        setFocused.off();\n        setActiveIndex(-1);\n      })\n    });\n  }, [ids, value, valueBounds, isInteractive, isDragging, activeIndex, getAriaValueText, ariaValueText, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused]);\n  var getOutputProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (ref === void 0) {\n      ref = null;\n    }\n    return _extends({}, props, {\n      ref,\n      id: ids.output,\n      htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n      \"aria-live\": \"off\"\n    });\n  }, [ids, value]);\n  var getMarkerProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (ref === void 0) {\n      ref = null;\n    }\n    var {\n        value: v\n      } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"value\"]);\n    var isInRange = !(v < min || v > max);\n    var isHighlighted = v >= value[0] && v <= value[value.length - 1];\n    var percent = valueToPercent(v, min, max);\n    percent = isReversed ? 100 - percent : percent;\n    var markerStyle = _extends({\n      position: \"absolute\",\n      pointerEvents: \"none\"\n    }, orient({\n      orientation,\n      vertical: {\n        bottom: percent + \"%\"\n      },\n      horizontal: {\n        left: percent + \"%\"\n      }\n    }));\n    return _extends({}, rest, {\n      ref,\n      id: ids.getMarker(props.value),\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: _extends({}, props.style, markerStyle)\n    });\n  }, [isDisabled, isReversed, max, min, orientation, value, ids]);\n  var getInputProps = useCallback(function (props, ref) {\n    if (ref === void 0) {\n      ref = null;\n    }\n    var {\n        index\n      } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"index\"]);\n    return _extends({}, rest, {\n      ref,\n      id: ids.getInput(index),\n      type: \"hidden\",\n      value: value[index],\n      name: Array.isArray(name) ? name[index] : name + \"-\" + index\n    });\n  }, [name, value, ids]);\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging,\n      getThumbPercent: i => thumbPercents[i],\n      getThumbMinValue: i => valueBounds[i].min,\n      getThumbMaxValue: i => valueBounds[i].max\n    },\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps\n  };\n}\nvar getValueBounds = (arr, min, max, spacing) => arr.map((v, i) => {\n  var _min = i === 0 ? min : arr[i - 1] + spacing;\n  var _max = i === arr.length - 1 ? max : arr[i + 1] - spacing;\n  return {\n    min: _min,\n    max: _max\n  };\n});","map":{"version":3,"sources":["../../src/use-range-slider.ts"],"names":["useBoolean","useCallbackRef","useControllableState","useId","useLatestRef","usePanGesture","useUpdateEffect","mergeRefs","ariaAttr","callAllHandlers","clampValue","dataAttr","focus","normalizeEventKey","percentToValue","roundValueToStep","valueToPercent","useCallback","useEffect","useMemo","useRef","useState","getIds","getIsReversed","getStyles","orient","useRangeSlider","props","min","max","onChange","value","valueProp","defaultValue","isReversed","isReversedProp","direction","orientation","id","idProp","isDisabled","isReadOnly","onChangeStart","onChangeStartProp","onChangeEnd","onChangeEndProp","step","getAriaValueText","getAriaValueTextProp","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","minStepsBetweenThumbs","htmlProps","valueState","setValue","Array","isArray","TypeError","isDragging","setDragging","isFocused","setFocused","activeIndex","setActiveIndex","eventSourceRef","isInteractive","initialValue","map","val","valueRef","spacing","valueBounds","getValueBounds","reversedValue","thumbValues","thumbPercents","isVertical","thumbRects","setThumbRects","from","length","width","height","rootRef","current","thumbs","querySelectorAll","rects","el","offsetWidth","offsetHeight","trackRef","uuid","ids","getValueFromPointer","event","rect","getBoundingClientRect","clientX","clientY","touches","diff","bottom","left","percent","tenSteps","oneStep","actions","setValueAtIndex","index","bounds","parseFloat","next","stepUp","valueAtIndex","stepDown","reset","onKeyDown","eventKey","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","preventDefault","stopPropagation","getThumbStyle","rootStyle","trackStyle","innerTrackStyle","focusThumb","idx","getThumb","thumb","ownerDocument","getElementById","setTimeout","onPanSessionStart","pointValue","distances","Math","abs","isThumbStacked","Set","size","closest","indexOf","onPan","on","onPanSessionEnd","off","getRootProps","ref","root","tabIndex","style","getTrackProps","track","getInnerTrackProps","innerTrack","getThumbProps","rest","_value","role","undefined","onFocus","onBlur","getOutputProps","output","htmlFor","v","i","join","getMarkerProps","isInRange","isHighlighted","markerStyle","position","pointerEvents","vertical","horizontal","getMarker","getInputProps","getInput","type","state","getThumbPercent","getThumbMinValue","getThumbMaxValue","arr","_min","_max"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useCallbackRef,\n  useControllableState,\n  useId,\n  useLatestRef,\n  usePanGesture,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { EventKeyMap, mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport {\n  AnyPointerEvent,\n  ariaAttr,\n  callAllHandlers,\n  clampValue,\n  dataAttr,\n  focus,\n  normalizeEventKey,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { getIds, getIsReversed, getStyles, orient } from \"./slider-utils\"\n\nexport interface UseRangeSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number[]\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number[]\n  /**\n   * orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * Function called when the user starts selecting a new value (by dragging or clicking)\n   */\n  onChangeStart?(value: number[]): void\n  /**\n   * Function called when the user is done selecting a new value (by dragging or clicking)\n   */\n  onChangeEnd?(value: number[]): void\n  /**\n   * Function called whenever the slider value changes  (by dragging or clicking)\n   */\n  onChange?(value: number[]): void\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string | string[]\n  /**\n   * If `true`, the slider will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string[]\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string[]\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string[]\n  /**\n   * The writing mode\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /**\n   * The minimum distance between slider thumbs. Useful for preventing\n   * the thumbs from being too close together.\n   * @default 0\n   */\n  minStepsBetweenThumbs?: number\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useRangeSlider(props: UseRangeSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    minStepsBetweenThumbs = 0,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation,\n  })\n\n  const [valueState, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? [25, 75],\n    onChange,\n  })\n\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\n      `[range-slider] You passed an invalid value for \\`value\\` or \\`defaultValue\\`, expected \\`Array\\` but got \\`${typeof valueState}\\``,\n    )\n  }\n\n  const [isDragging, setDragging] = useBoolean()\n  const [isFocused, setFocused] = useBoolean()\n  const [activeIndex, setActiveIndex] = useState(-1)\n  const eventSourceRef = useRef<\"pointer\" | \"keyboard\" | null>(null)\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  const initialValue = useRef(valueState)\n  const value = valueState.map((val) => clampValue(val, min, max))\n  const valueRef = useLatestRef(value)\n\n  const spacing = minStepsBetweenThumbs * step\n  const valueBounds = getValueBounds(value, min, max, spacing)\n\n  const reversedValue = value.map((val) => max - val + min)\n  const thumbValues = isReversed ? reversedValue : value\n\n  const thumbPercents = thumbValues.map((val) => valueToPercent(val, min, max))\n\n  const isVertical = orientation === \"vertical\"\n\n  const [thumbRects, setThumbRects] = useState(\n    Array.from({ length: value.length }).map(() => ({ width: 0, height: 0 })),\n  )\n\n  useEffect(() => {\n    if (!rootRef.current) return\n\n    const thumbs = Array.from(\n      rootRef.current?.querySelectorAll<HTMLElement>(\"[role=slider]\"),\n    )\n    const rects = thumbs.map((el) => ({\n      width: el.offsetWidth,\n      height: el.offsetHeight,\n    }))\n\n    if (rects.length) setThumbRects(rects)\n  }, [])\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<HTMLElement>(null)\n  const rootRef = useRef<HTMLElement>(null)\n\n  const uuid = useId(idProp)\n  const ids = getIds(uuid)\n\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current) return\n      eventSourceRef.current = \"pointer\"\n      const rect = trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical ? rect.bottom - clientY : clientX - rect.left\n      const length = isVertical ? rect.height : rect.width\n\n      let percent = diff / length\n      if (isReversed) percent = 1 - percent\n\n      return percentToValue(percent, min, max)\n    },\n    [isVertical, isReversed, max, min],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const actions = useMemo(\n    () => ({\n      setValueAtIndex: (index: number, val: number) => {\n        if (!isInteractive) return\n        const bounds = valueBounds[index]\n        val = parseFloat(roundValueToStep(val, bounds.min, oneStep))\n        val = clampValue(val, bounds.min, bounds.max)\n        const next = [...value]\n        next[index] = val\n        setValue(next)\n      },\n      setActiveIndex,\n      stepUp: (index: number, step = oneStep) => {\n        const valueAtIndex = value[index]\n        const next = isReversed ? valueAtIndex - step : valueAtIndex + step\n        actions.setValueAtIndex(index, next)\n      },\n      stepDown: (index: number, step = oneStep) => {\n        const valueAtIndex = value[index]\n        const next = isReversed ? valueAtIndex + step : valueAtIndex - step\n        actions.setValueAtIndex(index, next)\n      },\n      reset: () => setValue(initialValue.current),\n    }),\n    [oneStep, value, isReversed, setValue, isInteractive, valueBounds],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        ArrowRight: () => actions.stepUp(activeIndex),\n        ArrowUp: () => actions.stepUp(activeIndex),\n        ArrowLeft: () => actions.stepDown(activeIndex),\n        ArrowDown: () => actions.stepDown(activeIndex),\n        PageUp: () => actions.stepUp(activeIndex, tenSteps),\n        PageDown: () => actions.stepDown(activeIndex, tenSteps),\n        Home: () => {\n          const { min: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n        End: () => {\n          const { max: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        eventSourceRef.current = \"keyboard\"\n      }\n    },\n    [actions, activeIndex, tenSteps, valueBounds],\n  )\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } = useMemo(\n    () =>\n      getStyles({\n        isReversed,\n        orientation,\n        thumbRects,\n        thumbPercents,\n      }),\n    [isReversed, orientation, thumbPercents, thumbRects],\n  )\n\n  const focusThumb = useCallback(\n    (index?: number) => {\n      const idx = index ?? activeIndex\n      if (idx !== -1 && focusThumbOnChange) {\n        const id = ids.getThumb(idx)\n        const thumb = rootRef.current?.ownerDocument.getElementById(id)\n        if (thumb) {\n          setTimeout(() => focus(thumb))\n        }\n      }\n    },\n    [focusThumbOnChange, activeIndex, ids],\n  )\n\n  useUpdateEffect(() => {\n    if (eventSourceRef.current === \"keyboard\") {\n      onChangeEnd?.(valueRef.current)\n    }\n  }, [value, onChangeEnd])\n\n  const onPanSessionStart = (event: AnyPointerEvent) => {\n    const pointValue = getValueFromPointer(event) || 0\n    const distances = value.map((val) => Math.abs(val - pointValue))\n    const isThumbStacked = new Set(distances).size !== distances.length\n    const closest = Math.min(...distances)\n    let index = distances.indexOf(closest)\n    // when two thumbs are stacked and the user clicks at a point larger than\n    // their values, pick the next closest thumb\n    if (isThumbStacked && pointValue > value[index]) {\n      index++\n    }\n    setActiveIndex(index)\n    actions.setValueAtIndex(index, pointValue)\n    focusThumb(index)\n  }\n\n  const onPan = (event: AnyPointerEvent) => {\n    const pointValue = getValueFromPointer(event) || 0\n    setActiveIndex(activeIndex)\n    actions.setValueAtIndex(activeIndex, pointValue)\n    focusThumb(activeIndex)\n  }\n\n  usePanGesture(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return\n      setDragging.on()\n      onPanSessionStart(event)\n      onChangeStart?.(valueRef.current)\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return\n      setDragging.off()\n      onChangeEnd?.(valueRef.current)\n    },\n    onPan(event) {\n      if (!isInteractive) return\n      onPan(event)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ...htmlProps,\n      id: ids.root,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: { ...props.style, ...rootStyle },\n    }),\n    [htmlProps, isDisabled, isFocused, rootStyle, ids],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(ref, trackRef),\n      id: ids.track,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: { ...props.style, ...trackStyle },\n    }),\n    [isDisabled, trackStyle, ids],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      id: ids.innerTrack,\n      style: { ...props.style, ...innerTrackStyle },\n    }),\n    [innerTrackStyle, ids],\n  )\n\n  const getThumbProps = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n\n      const _value = value[index]\n      if (_value == null) {\n        throw new TypeError(\n          `[range-slider > thumb] Cannot find value at index \\`${index}\\`. The \\`value\\` or \\`defaultValue\\` length is : ${value.length}`,\n        )\n      }\n      const bounds = valueBounds[index]\n\n      return {\n        ...rest,\n        ref,\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : undefined,\n        id: ids.getThumb(index),\n        \"data-active\": dataAttr(isDragging && activeIndex === index),\n        \"aria-valuetext\": getAriaValueText?.(_value) ?? ariaValueText?.[index],\n        \"aria-valuemin\": bounds.min,\n        \"aria-valuemax\": bounds.max,\n        \"aria-valuenow\": _value,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel?.[index],\n        \"aria-labelledby\": ariaLabel?.[index]\n          ? undefined\n          : ariaLabelledBy?.[index],\n        style: { ...props.style, ...getThumbStyle(index) },\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props.onFocus, () => {\n          setFocused.on()\n          setActiveIndex(index)\n        }),\n        onBlur: callAllHandlers(props.onBlur, () => {\n          setFocused.off()\n          setActiveIndex(-1)\n        }),\n      }\n    },\n    [\n      ids,\n      value,\n      valueBounds,\n      isInteractive,\n      isDragging,\n      activeIndex,\n      getAriaValueText,\n      ariaValueText,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n      setFocused,\n    ],\n  )\n\n  const getOutputProps = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      id: ids.output,\n      htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n      \"aria-live\": \"off\",\n    }),\n    [ids, value],\n  )\n\n  const getMarkerProps: PropGetter<any, { value?: any }> = useCallback(\n    (props = {}, ref = null) => {\n      const { value: v, ...rest } = props\n\n      const isInRange = !(v < min || v > max)\n      const isHighlighted = v >= value[0] && v <= value[value.length - 1]\n\n      let percent = valueToPercent(v, min, max)\n      percent = isReversed ? 100 - percent : percent\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: { bottom: `${percent}%` },\n          horizontal: { left: `${percent}%` },\n        }),\n      }\n\n      return {\n        ...rest,\n        ref,\n        id: ids.getMarker(props.value),\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value, ids],\n  )\n\n  const getInputProps = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        id: ids.getInput(index),\n        type: \"hidden\",\n        value: value[index],\n        name: Array.isArray(name) ? name[index] : `${name}-${index}`,\n      }\n    },\n    [name, value, ids],\n  )\n\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging,\n      getThumbPercent: (i: number) => thumbPercents[i],\n      getThumbMinValue: (i: number) => valueBounds[i].min,\n      getThumbMaxValue: (i: number) => valueBounds[i].max,\n    },\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps,\n  }\n}\n\nexport type UseRangeSliderReturn = ReturnType<typeof useRangeSlider>\n\nconst getValueBounds = (\n  arr: number[],\n  min: number,\n  max: number,\n  spacing: number,\n) =>\n  arr.map((v, i) => {\n    const _min = i === 0 ? min : arr[i - 1] + spacing\n    const _max = i === arr.length - 1 ? max : arr[i + 1] - spacing\n    return { min: _min, max: _max }\n  })\n"]},"metadata":{},"sourceType":"module"}