{"ast":null,"code":"import { t } from \"../utils\";\nexport var position = {\n  position: true,\n  pos: t.prop(\"position\"),\n  zIndex: t.prop(\"zIndex\", \"zIndices\"),\n  inset: t.spaceT([\"top\", \"right\", \"bottom\", \"left\"]),\n  insetX: t.spaceT([\"left\", \"right\"]),\n  insetInline: t.spaceT(\"insetInline\"),\n  insetY: t.spaceT([\"top\", \"bottom\"]),\n  insetBlock: t.spaceT(\"insetBlock\"),\n  top: t.spaceT(\"top\"),\n  insetBlockStart: t.spaceT(\"insetBlockStart\"),\n  bottom: t.spaceT(\"bottom\"),\n  insetBlockEnd: t.spaceT(\"insetBlockEnd\"),\n  left: t.spaceT(\"left\"),\n  insetInlineStart: t.logical({\n    scale: \"space\",\n    property: {\n      ltr: \"left\",\n      rtl: \"right\"\n    }\n  }),\n  right: t.spaceT(\"right\"),\n  insetInlineEnd: t.logical({\n    scale: \"space\",\n    property: {\n      ltr: \"right\",\n      rtl: \"left\"\n    }\n  })\n};\nObject.assign(position, {\n  insetStart: position.insetInlineStart,\n  insetEnd: position.insetInlineEnd\n});\n/**\n * Types for position CSS properties\n */","map":{"version":3,"sources":["../../../src/config/position.ts"],"names":["t","position","pos","prop","zIndex","inset","spaceT","insetX","insetInline","insetY","insetBlock","top","insetBlockStart","bottom","insetBlockEnd","left","insetInlineStart","logical","scale","property","ltr","rtl","right","insetInlineEnd","Object","assign","insetStart","insetEnd"],"mappings":"AAEA,SAASA,CAAT,QAAyB,UAAzB;AAEA,OAAO,IAAMC,QAAgB,GAAG;EAC9BA,QAAQ,EAAE,IADoB;EAE9BC,GAAG,EAAEF,CAAC,CAACG,IAAFH,CAAO,UAAPA,CAFyB;EAG9BI,MAAM,EAAEJ,CAAC,CAACG,IAAFH,CAAO,QAAPA,EAAiB,UAAjBA,CAHsB;EAI9BK,KAAK,EAAEL,CAAC,CAACM,MAAFN,CAAS,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAATA,CAJuB;EAK9BO,MAAM,EAAEP,CAAC,CAACM,MAAFN,CAAS,CAAC,MAAD,EAAS,OAAT,CAATA,CALsB;EAM9BQ,WAAW,EAAER,CAAC,CAACM,MAAFN,CAAS,aAATA,CANiB;EAO9BS,MAAM,EAAET,CAAC,CAACM,MAAFN,CAAS,CAAC,KAAD,EAAQ,QAAR,CAATA,CAPsB;EAQ9BU,UAAU,EAAEV,CAAC,CAACM,MAAFN,CAAS,YAATA,CARkB;EAS9BW,GAAG,EAAEX,CAAC,CAACM,MAAFN,CAAS,KAATA,CATyB;EAU9BY,eAAe,EAAEZ,CAAC,CAACM,MAAFN,CAAS,iBAATA,CAVa;EAW9Ba,MAAM,EAAEb,CAAC,CAACM,MAAFN,CAAS,QAATA,CAXsB;EAY9Bc,aAAa,EAAEd,CAAC,CAACM,MAAFN,CAAS,eAATA,CAZe;EAa9Be,IAAI,EAAEf,CAAC,CAACM,MAAFN,CAAS,MAATA,CAbwB;EAc9BgB,gBAAgB,EAAE,CAAC,CAACC,OAAF,CAAU;IAC1BC,KAAK,EAAE,OADmB;IAE1BC,QAAQ,EAAE;MAAEC,GAAG,EAAE,MAAP;MAAeC,GAAG,EAAE;IAApB;EAFgB,CAAV,CAdY;EAkB9BC,KAAK,EAAEtB,CAAC,CAACM,MAAFN,CAAS,OAATA,CAlBuB;EAmB9BuB,cAAc,EAAE,CAAC,CAACN,OAAF,CAAU;IACxBC,KAAK,EAAE,OADiB;IAExBC,QAAQ,EAAE;MAAEC,GAAG,EAAE,OAAP;MAAgBC,GAAG,EAAE;IAArB;EAFc,CAAV;AAnBc,CAAzB;AAyBPG,MAAM,CAACC,MAAPD,CAAcvB,QAAduB,EAAwB;EACtBE,UAAU,EAAEzB,QAAQ,CAACe,gBADC;EAEtBW,QAAQ,EAAE1B,QAAQ,CAACsB;AAFG,CAAxBC,CAAAA;AAKA;AACA;AACA","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config } from \"../utils/prop-config\"\nimport { t, Token } from \"../utils\"\n\nexport const position: Config = {\n  position: true,\n  pos: t.prop(\"position\"),\n  zIndex: t.prop(\"zIndex\", \"zIndices\"),\n  inset: t.spaceT([\"top\", \"right\", \"bottom\", \"left\"]),\n  insetX: t.spaceT([\"left\", \"right\"]),\n  insetInline: t.spaceT(\"insetInline\"),\n  insetY: t.spaceT([\"top\", \"bottom\"]),\n  insetBlock: t.spaceT(\"insetBlock\"),\n  top: t.spaceT(\"top\"),\n  insetBlockStart: t.spaceT(\"insetBlockStart\"),\n  bottom: t.spaceT(\"bottom\"),\n  insetBlockEnd: t.spaceT(\"insetBlockEnd\"),\n  left: t.spaceT(\"left\"),\n  insetInlineStart: t.logical({\n    scale: \"space\",\n    property: { ltr: \"left\", rtl: \"right\" },\n  }),\n  right: t.spaceT(\"right\"),\n  insetInlineEnd: t.logical({\n    scale: \"space\",\n    property: { ltr: \"right\", rtl: \"left\" },\n  }),\n}\n\nObject.assign(position, {\n  insetStart: position.insetInlineStart,\n  insetEnd: position.insetInlineEnd,\n})\n\n/**\n * Types for position CSS properties\n */\nexport interface PositionProps {\n  /**\n   * The CSS `z-index` property\n   */\n  zIndex?: Token<CSS.Property.ZIndex, \"zIndices\">\n  /**\n   * The CSS `top` property\n   */\n  top?: Token<CSS.Property.Top | number, \"sizes\">\n  insetBlockStart?: Token<CSS.Property.InsetBlockStart | number, \"sizes\">\n  /**\n   * The CSS `right` property\n   */\n  right?: Token<CSS.Property.Right | number, \"sizes\">\n  /**\n   * When the direction is `ltr`, `insetInlineEnd` is equivalent to `right`.\n   * When the direction is `rtl`, `insetInlineEnd` is equivalent to `left`.\n   */\n  insetInlineEnd?: Token<CSS.Property.InsetInlineEnd | number, \"sizes\">\n  /**\n   * When the direction is `ltr`, `insetEnd` is equivalent to `right`.\n   * When the direction is `rtl`, `insetEnd` is equivalent to `left`.\n   */\n  insetEnd?: Token<CSS.Property.InsetInlineEnd | number, \"sizes\">\n  /**\n   * The CSS `bottom` property\n   */\n  bottom?: Token<CSS.Property.Bottom | number, \"sizes\">\n  insetBlockEnd?: Token<CSS.Property.InsetBlockEnd | number, \"sizes\">\n  /**\n   * The CSS `left` property\n   */\n  left?: Token<CSS.Property.Left | number, \"sizes\">\n  insetInlineStart?: Token<CSS.Property.InsetInlineStart | number, \"sizes\">\n  /**\n   * When the direction is `start`, `end` is equivalent to `left`.\n   * When the direction is `start`, `end` is equivalent to `right`.\n   */\n  insetStart?: Token<CSS.Property.InsetInlineStart | number, \"sizes\">\n  /**\n   * The CSS `left`, `right`, `top`, `bottom` property\n   */\n  inset?: Token<CSS.Property.Left | number, \"sizes\">\n  /**\n   * The CSS `left`, and `right` property\n   */\n  insetX?: Token<CSS.Property.Left | number, \"sizes\">\n  /**\n   * The CSS `top`, and `bottom` property\n   */\n  insetY?: Token<CSS.Property.Left | number, \"sizes\">\n  /**\n   * The CSS `position` property\n   */\n  pos?: Token<CSS.Property.Position>\n  /**\n   * The CSS `position` property\n   */\n  position?: Token<CSS.Property.Position>\n  insetInline?: Token<CSS.Property.InsetInline>\n  insetBlock?: Token<CSS.Property.InsetBlock>\n}\n"]},"metadata":{},"sourceType":"module"}