{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\MedSync\\\\src\\\\routes\\\\AdminRoute.js\",\n  _s = $RefreshSig$();\n// src/routes/AdminRoute.js\nimport React from 'react';\nimport { Redirect } from 'react-router-dom'; // For redirecting to other routes\nimport useAuth from '../hooks/useAuth'; // Import the useAuth hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth(); // Get the current user from the context\n  const allowedEmails = ['b22es006@iitj.ac.in', 'b22cs101@iitj.ac.in', 'b22cs014@iitj.ac.in'];\n\n  // If the user is not in the allowed list, redirect to home\n  if (!user || !allowedEmails.includes(user.email)) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return children; // Render the children (AdminPage) if the user is allowed\n};\n_s(AdminRoute, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Redirect","useAuth","jsxDEV","_jsxDEV","AdminRoute","children","_s","user","allowedEmails","includes","email","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Pr/Web D/MedSync/src/routes/AdminRoute.js"],"sourcesContent":["// src/routes/AdminRoute.js\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';  // For redirecting to other routes\r\nimport useAuth from '../hooks/useAuth';  // Import the useAuth hook\r\n\r\nconst AdminRoute = ({ children }) => {\r\n  const { user } = useAuth();  // Get the current user from the context\r\n  const allowedEmails = ['b22es006@iitj.ac.in', 'b22cs101@iitj.ac.in', 'b22cs014@iitj.ac.in'];\r\n\r\n  // If the user is not in the allowed list, redirect to home\r\n  if (!user || !allowedEmails.includes(user.email)) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return children;  // Render the children (AdminPage) if the user is allowed\r\n};\r\n\r\nexport default AdminRoute;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAE;AAC9C,OAAOC,OAAO,MAAM,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC,CAAC,CAAE;EAC7B,MAAMO,aAAa,GAAG,CAAC,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,CAAC;;EAE3F;EACA,IAAI,CAACD,IAAI,IAAI,CAACC,aAAa,CAACC,QAAQ,CAACF,IAAI,CAACG,KAAK,CAAC,EAAE;IAChD,oBAAOP,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,OAAOV,QAAQ,CAAC,CAAE;AACpB,CAAC;AAACC,EAAA,CAVIF,UAAU;EAAA,QACGH,OAAO;AAAA;AAAAe,EAAA,GADpBZ,UAAU;AAYhB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}