{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { slideTransition, TransitionEasings, withDelay } from \"./transition-utils\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TransitionEasings.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants = {\n  exit: _ref => {\n    var _transition$exit;\n    var {\n      direction,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n    var {\n      exit: exitStyles\n    } = slideTransition({\n      direction\n    });\n    return _extends({}, exitStyles, {\n      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    });\n  },\n  enter: _ref2 => {\n    var _transition$enter;\n    var {\n      direction,\n      transitionEnd,\n      transition,\n      delay\n    } = _ref2;\n    var {\n      enter: enterStyles\n    } = slideTransition({\n      direction\n    });\n    return _extends({}, enterStyles, {\n      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    });\n  }\n};\nexport var Slide = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      direction = \"right\",\n      style,\n      unmountOnExit,\n      in: isOpen,\n      className,\n      transition,\n      transitionEnd,\n      delay\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"direction\", \"style\", \"unmountOnExit\", \"in\", \"className\", \"transition\", \"transitionEnd\", \"delay\"]);\n  var transitionStyles = slideTransition({\n    direction\n  });\n  var computedStyle = Object.assign({\n    position: \"fixed\"\n  }, transitionStyles.position, style);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    transitionEnd,\n    transition,\n    direction,\n    delay\n  };\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    initial: \"exit\",\n    className: cx(\"chakra-slide\", className),\n    animate: animate,\n    exit: \"exit\",\n    custom: custom,\n    variants: variants,\n    style: computedStyle\n  }, rest)));\n});\nif (__DEV__) {\n  Slide.displayName = \"Slide\";\n}","map":{"version":3,"sources":["../../src/slide.tsx"],"names":["cx","__DEV__","AnimatePresence","motion","React","slideTransition","TransitionEasings","withDelay","defaultTransition","exit","duration","ease","easeInOut","enter","type","damping","stiffness","variants","direction","transition","transitionEnd","delay","exitStyles","enterStyles","Slide","forwardRef","props","ref","style","unmountOnExit","in","isOpen","className","rest","transitionStyles","computedStyle","assign","position","show","animate","custom","displayName"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  SlideDirection,\n  slideTransition,\n  TransitionEasings,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport type { SlideDirection }\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TransitionEasings.easeInOut,\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180,\n  },\n}\n\nconst variants: Variants<SlideOptions> = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = slideTransition({ direction })\n    return {\n      ...exitStyles,\n      transition:\n        transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit,\n    }\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = slideTransition({ direction })\n    return {\n      ...enterStyles,\n      transition:\n        transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter,\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n}\n\nexport interface SlideProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    SlideOptions {}\n\nexport const Slide = React.forwardRef<HTMLDivElement, SlideProps>(\n  (props, ref) => {\n    const {\n      direction = \"right\",\n      style,\n      unmountOnExit,\n      in: isOpen,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const transitionStyles = slideTransition({ direction })\n    const computedStyle: MotionStyle = Object.assign(\n      { position: \"fixed\" },\n      transitionStyles.position,\n      style,\n    )\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { transitionEnd, transition, direction, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            initial=\"exit\"\n            className={cx(\"chakra-slide\", className)}\n            animate={animate}\n            exit=\"exit\"\n            custom={custom}\n            variants={variants as _Variants}\n            style={computedStyle}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\"\n}\n"]},"metadata":{},"sourceType":"module"}