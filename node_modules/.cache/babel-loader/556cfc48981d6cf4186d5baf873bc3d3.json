{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\MedSync\\\\src\\\\screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Bounce from 'react-reveal/Bounce';\nimport { Box, Button, FormControl, FormLabel, Input, Radio, RadioGroup, Select, Stack, Text, Image } from '@chakra-ui/react';\nimport OrderCard from '../components/Order/OrderCard';\nimport useOrder from '../hooks/useOrder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = () => {\n  _s();\n\n  const {\n    orders\n  } = useOrder();\n  const [deliveryTime, setDeliveryTime] = useState('');\n  const [recurringOrder, setRecurringOrder] = useState('');\n  const [paymentType, setPaymentType] = useState('');\n  const [upiScreenshot, setUpiScreenshot] = useState(null);\n\n  const handleScreenshotUpload = e => {\n    const file = e.target.files[0];\n\n    if (file) {\n      setUpiScreenshot(URL.createObjectURL(file));\n    }\n  };\n\n  const handlePlaceOrder = () => {\n    // Logic to place the order with the given details\n    console.log({\n      deliveryTime,\n      recurringOrder,\n      paymentType,\n      upiScreenshot\n    });\n    alert(\"Order placed successfully!\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"max-w-screen-xl py-24 mx-auto px-6\",\n    children: orders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl poppins text-center text-blue-600\",\n        children: \"Cart is Empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Bounce, {\n        left: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center space-x-2 pb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-gray-700 poppins text-3xl\",\n            children: [\"All \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-blue-600 font-semibold select-none\",\n              children: \"Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-600 flex items-center justify-center w-16 h-1 mt-2 rounded-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-4\",\n          children: orders.map(item => /*#__PURE__*/_jsxDEV(OrderCard, { ...item\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 10,\n        p: 5,\n        borderWidth: \"1px\",\n        borderRadius: \"lg\",\n        shadow: \"md\",\n        bg: \"white\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"2xl\",\n          fontWeight: \"bold\",\n          mb: 5,\n          children: \"Order Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Delivery Timing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select delivery timing\",\n            onChange: e => setDeliveryTime(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Morning\",\n              children: \"Morning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Afternoon\",\n              children: \"Afternoon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Evening\",\n              children: \"Evening\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Recurring Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select recurrence\",\n            onChange: e => setRecurringOrder(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Every Month\",\n              children: \"Every Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Every 2 Months\",\n              children: \"Every 2 Months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"One-time\",\n              children: \"One-time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Payment Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            onChange: setPaymentType,\n            value: paymentType,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Radio, {\n                value: \"Cash\",\n                children: \"Cash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                value: \"UPI\",\n                children: \"UPI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), paymentType === 'UPI' && /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"md\",\n            mb: 2,\n            children: \"Scan QR Code to Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            src: \"/path-to-your-qr-code-image.png\",\n            alt: \"UPI QR Code\",\n            boxSize: \"150px\",\n            mb: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Upload Screenshot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"file\",\n              onChange: handleScreenshotUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), upiScreenshot && /*#__PURE__*/_jsxDEV(Image, {\n            src: upiScreenshot,\n            alt: \"UPI Screenshot\",\n            boxSize: \"100px\",\n            mt: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"blue\",\n          mt: 6,\n          onClick: handlePlaceOrder,\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderScreen, \"SWsIOZ9uxnk5LNIg2go+7mTaRwg=\", false, function () {\n  return [useOrder];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["E:/Pr/Web D/MedSync/src/screens/OrderScreen.js"],"names":["React","useState","Bounce","Box","Button","FormControl","FormLabel","Input","Radio","RadioGroup","Select","Stack","Text","Image","OrderCard","useOrder","OrderScreen","orders","deliveryTime","setDeliveryTime","recurringOrder","setRecurringOrder","paymentType","setPaymentType","upiScreenshot","setUpiScreenshot","handleScreenshotUpload","e","file","target","files","URL","createObjectURL","handlePlaceOrder","console","log","alert","length","map","item","id","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport { Box, Button, FormControl, FormLabel, Input, Radio, RadioGroup, Select, Stack, Text, Image } from '@chakra-ui/react';\r\nimport OrderCard from '../components/Order/OrderCard';\r\nimport useOrder from '../hooks/useOrder';\r\n\r\nconst OrderScreen = () => {\r\n    const { orders } = useOrder();\r\n    const [deliveryTime, setDeliveryTime] = useState('');\r\n    const [recurringOrder, setRecurringOrder] = useState('');\r\n    const [paymentType, setPaymentType] = useState('');\r\n    const [upiScreenshot, setUpiScreenshot] = useState(null);\r\n\r\n    const handleScreenshotUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setUpiScreenshot(URL.createObjectURL(file));\r\n        }\r\n    };\r\n\r\n    const handlePlaceOrder = () => {\r\n        // Logic to place the order with the given details\r\n        console.log({\r\n            deliveryTime,\r\n            recurringOrder,\r\n            paymentType,\r\n            upiScreenshot,\r\n        });\r\n        alert(\"Order placed successfully!\");\r\n    };\r\n\r\n    return (\r\n        <section className=\"max-w-screen-xl py-24 mx-auto px-6\">\r\n            {orders.length === 0 ? (\r\n                <div className=\"h-screen\">\r\n                    <h1 className=\"text-4xl poppins text-center text-blue-600\">Cart is Empty!</h1>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <Bounce left>\r\n                        <div className=\"flex flex-col items-center space-x-2 pb-8\">\r\n                            <h1 className=\"text-gray-700 poppins text-3xl\">\r\n                                All <span className=\"text-blue-600 font-semibold select-none\">Orders</span>\r\n                            </h1>\r\n                            <div className=\"bg-blue-600 flex items-center justify-center w-16 h-1 mt-2 rounded-full\"></div>\r\n                        </div>\r\n                    </Bounce>\r\n                    <div className=\"flex justify-center\">\r\n                        <div className=\"flex flex-col space-y-4\">\r\n                            {orders.map((item) => (\r\n                                <OrderCard key={item.id} {...item} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* Order Details Form */}\r\n                    <Box mt={10} p={5} borderWidth=\"1px\" borderRadius=\"lg\" shadow=\"md\" bg=\"white\">\r\n                        <Text fontSize=\"2xl\" fontWeight=\"bold\" mb={5}>\r\n                            Order Details\r\n                        </Text>\r\n                        \r\n                        {/* Delivery Timing */}\r\n                        <FormControl mb={4}>\r\n                            <FormLabel>Delivery Timing</FormLabel>\r\n                            <Select placeholder=\"Select delivery timing\" onChange={(e) => setDeliveryTime(e.target.value)}>\r\n                                <option value=\"Morning\">Morning</option>\r\n                                <option value=\"Afternoon\">Afternoon</option>\r\n                                <option value=\"Evening\">Evening</option>\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        {/* Recurring Order */}\r\n                        <FormControl mb={4}>\r\n                            <FormLabel>Recurring Order</FormLabel>\r\n                            <Select placeholder=\"Select recurrence\" onChange={(e) => setRecurringOrder(e.target.value)}>\r\n                                <option value=\"Every Month\">Every Month</option>\r\n                                <option value=\"Every 2 Months\">Every 2 Months</option>\r\n                                <option value=\"One-time\">One-time</option>\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        {/* Payment Type */}\r\n                        <FormControl mb={4}>\r\n                            <FormLabel>Payment Type</FormLabel>\r\n                            <RadioGroup onChange={setPaymentType} value={paymentType}>\r\n                                <Stack direction=\"row\">\r\n                                    <Radio value=\"Cash\">Cash</Radio>\r\n                                    <Radio value=\"UPI\">UPI</Radio>\r\n                                </Stack>\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n\r\n                        {/* UPI QR Code and Screenshot Upload */}\r\n                        {paymentType === 'UPI' && (\r\n                            <Box mt={4}>\r\n                                <Text fontSize=\"md\" mb={2}>Scan QR Code to Pay</Text>\r\n                                <Image src=\"/path-to-your-qr-code-image.png\" alt=\"UPI QR Code\" boxSize=\"150px\" mb={4} />\r\n                                \r\n                                <FormControl>\r\n                                    <FormLabel>Upload Screenshot</FormLabel>\r\n                                    <Input type=\"file\" onChange={handleScreenshotUpload} />\r\n                                </FormControl>\r\n                                \r\n                                {upiScreenshot && (\r\n                                    <Image src={upiScreenshot} alt=\"UPI Screenshot\" boxSize=\"100px\" mt={4} />\r\n                                )}\r\n                            </Box>\r\n                        )}\r\n\r\n                        {/* Place Order Button */}\r\n                        <Button colorScheme=\"blue\" mt={6} onClick={handlePlaceOrder}>\r\n                            Place Order\r\n                        </Button>\r\n                    </Box>\r\n                </>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default OrderScreen;\r\n"]},"metadata":{},"sourceType":"module"}