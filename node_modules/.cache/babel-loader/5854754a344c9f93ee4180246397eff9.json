{"ast":null,"code":"import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\";\nvar baseStyle = {\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\"\n};\nvar variantSolid = props => {\n  var {\n    colorScheme: c,\n    theme\n  } = props;\n  var dark = transparentize(c + \".500\", 0.6)(theme);\n  return {\n    bg: mode(c + \".500\", dark)(props),\n    color: mode(\"white\", \"whiteAlpha.800\")(props)\n  };\n};\nvar variantSubtle = props => {\n  var {\n    colorScheme: c,\n    theme\n  } = props;\n  var darkBg = transparentize(c + \".200\", 0.16)(theme);\n  return {\n    bg: mode(c + \".100\", darkBg)(props),\n    color: mode(c + \".800\", c + \".200\")(props)\n  };\n};\nvar variantOutline = props => {\n  var {\n    colorScheme: c,\n    theme\n  } = props;\n  var darkColor = transparentize(c + \".200\", 0.8)(theme);\n  var lightColor = getColor(theme, c + \".500\");\n  var color = mode(lightColor, darkColor)(props);\n  return {\n    color,\n    boxShadow: \"inset 0 0 0px 1px \" + color\n  };\n};\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"gray\"\n};\nexport default {\n  baseStyle,\n  variants,\n  defaultProps\n};","map":{"version":3,"sources":["../../../src/components/badge.ts"],"names":["getColor","mode","transparentize","baseStyle","px","textTransform","fontSize","borderRadius","fontWeight","variantSolid","props","colorScheme","c","theme","dark","bg","color","variantSubtle","darkBg","variantOutline","darkColor","lightColor","boxShadow","variants","solid","subtle","outline","defaultProps","variant"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,IAAnB,EAAyBC,cAAzB,QAA+C,wBAA/C;AAMA,IAAMC,SAA4B,GAAG;EACnCC,EAAE,EAAE,CAD+B;EAEnCC,aAAa,EAAE,WAFoB;EAGnCC,QAAQ,EAAE,IAHyB;EAInCC,YAAY,EAAE,IAJqB;EAKnCC,UAAU,EAAE;AALuB,CAArC;AAQA,IAAMC,YAAiC,GAAIC,KAAD,IAAW;EACnD,IAAM;IAAEC,WAAW,EAAEC,CAAf;IAAkBC;EAAlB,CAAA,GAA4BH,KAAlC;EACA,IAAMI,IAAI,GAAGZ,cAAc,CAAIU,CAAJ,GAAA,MAAA,EAAa,GAAb,CAAdV,CAAgCW,KAAhCX,CAAb;EACA,OAAO;IACLa,EAAE,EAAEd,IAAI,CAAIW,CAAJ,GAAA,MAAA,EAAaE,IAAb,CAAJb,CAAuBS,KAAvBT,CADC;IAELe,KAAK,EAAEf,IAAI,CAAA,OAAA,EAAA,gBAAA,CAAJA,CAAgCS,KAAhCT;EAFF,CAAP;AAID,CAPD;AASA,IAAMgB,aAAkC,GAAIP,KAAD,IAAW;EACpD,IAAM;IAAEC,WAAW,EAAEC,CAAf;IAAkBC;EAAlB,CAAA,GAA4BH,KAAlC;EACA,IAAMQ,MAAM,GAAGhB,cAAc,CAAIU,CAAJ,GAAA,MAAA,EAAa,IAAb,CAAdV,CAAiCW,KAAjCX,CAAf;EACA,OAAO;IACLa,EAAE,EAAEd,IAAI,CAAIW,CAAJ,GAAA,MAAA,EAAaM,MAAb,CAAJjB,CAAyBS,KAAzBT,CADC;IAELe,KAAK,EAAEf,IAAI,CAAIW,CAAJ,GAAA,MAAA,EAAgBA,CAAhB,GAAA,MAAA,CAAJX,CAA6BS,KAA7BT;EAFF,CAAP;AAID,CAPD;AASA,IAAMkB,cAAmC,GAAIT,KAAD,IAAW;EACrD,IAAM;IAAEC,WAAW,EAAEC,CAAf;IAAkBC;EAAlB,CAAA,GAA4BH,KAAlC;EACA,IAAMU,SAAS,GAAGlB,cAAc,CAAIU,CAAJ,GAAA,MAAA,EAAa,GAAb,CAAdV,CAAgCW,KAAhCX,CAAlB;EACA,IAAMmB,UAAU,GAAGrB,QAAQ,CAACa,KAAD,EAAWD,CAAX,GAAA,MAAA,CAA3B;EACA,IAAMI,KAAK,GAAGf,IAAI,CAACoB,UAAD,EAAaD,SAAb,CAAJnB,CAA4BS,KAA5BT,CAAd;EAEA,OAAO;IACLe,KADK;IAELM,SAAS,EAAA,oBAAA,GAAuBN;EAF3B,CAAP;AAID,CAVD;AAYA,IAAMO,QAAQ,GAAG;EACfC,KAAK,EAAEf,YADQ;EAEfgB,MAAM,EAAER,aAFO;EAGfS,OAAO,EAAEP;AAHM,CAAjB;AAMA,IAAMQ,YAAY,GAAG;EACnBC,OAAO,EAAE,QADU;EAEnBjB,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe;EACbR,SADa;EAEboB,QAFa;EAGbI;AAHa,CAAf","sourcesContent":["import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\"\nimport type {\n  SystemStyleFunction,\n  SystemStyleObject,\n} from \"@chakra-ui/theme-tools\"\n\nconst baseStyle: SystemStyleObject = {\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n}\n\nconst variantSolid: SystemStyleFunction = (props) => {\n  const { colorScheme: c, theme } = props\n  const dark = transparentize(`${c}.500`, 0.6)(theme)\n  return {\n    bg: mode(`${c}.500`, dark)(props),\n    color: mode(`white`, `whiteAlpha.800`)(props),\n  }\n}\n\nconst variantSubtle: SystemStyleFunction = (props) => {\n  const { colorScheme: c, theme } = props\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return {\n    bg: mode(`${c}.100`, darkBg)(props),\n    color: mode(`${c}.800`, `${c}.200`)(props),\n  }\n}\n\nconst variantOutline: SystemStyleFunction = (props) => {\n  const { colorScheme: c, theme } = props\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme)\n  const lightColor = getColor(theme, `${c}.500`)\n  const color = mode(lightColor, darkColor)(props)\n\n  return {\n    color,\n    boxShadow: `inset 0 0 0px 1px ${color}`,\n  }\n}\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n}\n\nconst defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"gray\",\n}\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}