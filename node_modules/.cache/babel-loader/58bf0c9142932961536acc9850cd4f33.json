{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\frmwrks\\\\idea3\\\\Phami-Pharma-ReactJS\\\\src\\\\routes\\\\PublicRoute.js\",\n    _s = $RefreshSig$();\n\nimport { css } from \"@emotion/react\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport GridLoader from \"react-spinners/GridLoader\";\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst PublicRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user,\n    isLoading\n  } = useAuth();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(GridLoader, {\n        color: \"#1d4ed8\",\n        css: override,\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => !user.displayName ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PublicRoute, \"6lKHjqCqGIRsHh92bje8H78laow=\", false, function () {\n  return [useAuth];\n});\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["E:/Pr/Web D/frmwrks/idea3/Phami-Pharma-ReactJS/src/routes/PublicRoute.js"],"names":["css","React","Redirect","Route","GridLoader","useAuth","override","PublicRoute","children","rest","user","isLoading","location","displayName","pathname","state","from"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,QAAQ,GAAGN,GAAI;AACrB;AACA;AACA;AACA,CAJA;;AAMA,MAAMO,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAAA;;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBN,OAAO,EAAnC;;AACA,MAAIM,SAAJ,EAAe;AACX,wBACI;AAAK,MAAA,SAAS,EAAC,oDAAf;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,GAAG,EAAEL,QAAjC;AAA2C,QAAA,IAAI,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAED,sBACI,QAAC,KAAD,OACQG,IADR;AAEI,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KACJ,CAACF,IAAI,CAACG,WAAN,GACIL,QADJ,gBAGI,QAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAM,QAAAA,QAAQ,EAAE,GADV;AAEAC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEJ;AAAR;AAFP;AADR;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA5BD;;GAAML,W;UAC0BF,O;;;KAD1BE,W;AA8BN,eAAeA,WAAf","sourcesContent":["import { css } from \"@emotion/react\";\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst PublicRoute = ({ children, ...rest }) => {\r\n    const { user, isLoading } = useAuth();\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"flex flex-col items-center justify-center h-screen\">\r\n                <GridLoader color=\"#1d4ed8\" css={override} size={25} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                !user.displayName ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PublicRoute\r\n"]},"metadata":{},"sourceType":"module"}