{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { ToastManager } from \"./toast-manager\";\nvar portalId = \"chakra-toast-portal\";\nclass Toaster {\n  /**\n   * Initialize the manager and mount it in the DOM\n   * inside the portal node.\n   *\n   * @todo\n   *\n   * Update toast constructor to use `PortalManager`'s node or document.body.\n   * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n   */\n  constructor() {\n    var _this = this;\n    _defineProperty(this, \"createToast\", void 0);\n    _defineProperty(this, \"removeAll\", void 0);\n    _defineProperty(this, \"closeToast\", void 0);\n    _defineProperty(this, \"updateToast\", void 0);\n    _defineProperty(this, \"isToastActive\", void 0);\n    _defineProperty(this, \"bindFunctions\", methods => {\n      this.createToast = methods.notify;\n      this.removeAll = methods.closeAll;\n      this.closeToast = methods.close;\n      this.updateToast = methods.update;\n      this.isToastActive = methods.isActive;\n    });\n    _defineProperty(this, \"notify\", function (message, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return _this.createToast == null ? void 0 : _this.createToast(message, options);\n    });\n    _defineProperty(this, \"close\", id => {\n      var _this$closeToast;\n      (_this$closeToast = this.closeToast) == null ? void 0 : _this$closeToast.call(this, id);\n    });\n    _defineProperty(this, \"closeAll\", options => {\n      var _this$removeAll;\n      (_this$removeAll = this.removeAll) == null ? void 0 : _this$removeAll.call(this, options);\n    });\n    _defineProperty(this, \"update\", function (id, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      _this.updateToast == null ? void 0 : _this.updateToast(id, options);\n    });\n    _defineProperty(this, \"isActive\", id => {\n      var _this$isToastActive;\n      return (_this$isToastActive = this.isToastActive) == null ? void 0 : _this$isToastActive.call(this, id);\n    });\n    if (!isBrowser) return;\n    var portal;\n    var existingPortal = document.getElementById(portalId);\n    if (existingPortal) {\n      portal = existingPortal;\n    } else {\n      var _document$body;\n      var div = document.createElement(\"div\");\n      div.id = portalId;\n      (_document$body = document.body) == null ? void 0 : _document$body.appendChild(div);\n      portal = div;\n    }\n    render(/*#__PURE__*/React.createElement(ToastManager, {\n      notify: this.bindFunctions\n    }), portal);\n  }\n}\nexport var toast = new Toaster();","map":{"version":3,"sources":["../../src/toast.class.tsx"],"names":["isBrowser","React","render","ToastManager","portalId","Toaster","constructor","portal","existingPortal","document","getElementById","div","createElement","id","body","appendChild","bindFunctions","methods","createToast","notify","removeAll","closeAll","closeToast","close","updateToast","update","isToastActive","isActive","message","options","toast"],"mappings":"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","sourcesContent":["import { isBrowser } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { render } from \"react-dom\"\nimport { ToastMethods, ToastManager } from \"./toast-manager\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n} from \"./toast.types\"\n\nconst portalId = \"chakra-toast-portal\"\n\nclass Toaster {\n  private createToast?: ToastMethods[\"notify\"]\n  private removeAll?: ToastMethods[\"closeAll\"]\n  private closeToast?: ToastMethods[\"close\"]\n  private updateToast?: ToastMethods[\"update\"]\n  private isToastActive?: ToastMethods[\"isActive\"]\n\n  /**\n   * Initialize the manager and mount it in the DOM\n   * inside the portal node.\n   *\n   * @todo\n   *\n   * Update toast constructor to use `PortalManager`'s node or document.body.\n   * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n   */\n  constructor() {\n    if (!isBrowser) return\n\n    let portal: HTMLElement\n    const existingPortal = document.getElementById(portalId)\n\n    if (existingPortal) {\n      portal = existingPortal\n    } else {\n      const div = document.createElement(\"div\")\n      div.id = portalId\n      document.body?.appendChild(div)\n      portal = div\n    }\n\n    render(<ToastManager notify={this.bindFunctions} />, portal)\n  }\n\n  private bindFunctions = (methods: ToastMethods) => {\n    this.createToast = methods.notify\n    this.removeAll = methods.closeAll\n    this.closeToast = methods.close\n    this.updateToast = methods.update\n    this.isToastActive = methods.isActive\n  }\n\n  notify = (message: ToastMessage, options: Partial<ToastOptions> = {}) =>\n    this.createToast?.(message, options)\n\n  close = (id: ToastId) => {\n    this.closeToast?.(id)\n  }\n\n  closeAll = (options?: CloseAllToastsOptions) => {\n    this.removeAll?.(options)\n  }\n\n  update = (id: ToastId, options: Partial<ToastOptions> = {}) => {\n    this.updateToast?.(id, options)\n  }\n\n  isActive = (id: ToastId) => this.isToastActive?.(id)\n}\n\nexport const toast = new Toaster()\n"]},"metadata":{},"sourceType":"module"}