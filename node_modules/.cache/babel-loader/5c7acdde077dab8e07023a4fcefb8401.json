{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../config/firebase.js'; // Adjust the path if necessary\n\nconst useFetch = collectionName => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let documents = [];\n        if (collectionName === 'products') {\n          // Fetch data from Firestore for products\n          const querySnapshot = await getDocs(collection(db, collectionName));\n          documents = querySnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n        } else if (collectionName === 'services' || collectionName === 'testimonial') {\n          // Fetch data from JSON files for services and testimonials\n          const response = await fetch(`/database/${collectionName}.json`);\n          const jsonData = await response.json();\n          documents = jsonData;\n        } else if (collectionName === 'reviews') {\n          const querySnapshot = await getDocs(collection(db, collectionName));\n          documents = querySnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n        }\n        setData(documents);\n        console.log(\"Data fetched :- \", documents);\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n    fetchData();\n  }, [collectionName]);\n  return [data];\n};\n_s(useFetch, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","collection","getDocs","db","useFetch","collectionName","_s","data","setData","fetchData","documents","querySnapshot","docs","map","doc","id","response","fetch","jsonData","json","console","log","error"],"sources":["E:/Pr/Web D/MedSync/src/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../config/firebase.js'; // Adjust the path if necessary\r\n\r\nconst useFetch = (collectionName) => {\r\n    const [data, setData] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let documents = [];\r\n\r\n                if (collectionName === 'products') {\r\n                    // Fetch data from Firestore for products\r\n                    const querySnapshot = await getDocs(collection(db, collectionName));\r\n                    documents = querySnapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }));\r\n                } else if (collectionName === 'services' || collectionName === 'testimonial') {\r\n                    // Fetch data from JSON files for services and testimonials\r\n                    const response = await fetch(`/database/${collectionName}.json`);\r\n                    const jsonData = await response.json();\r\n                    documents = jsonData;\r\n                }\r\n\r\n                else if(collectionName === 'reviews'){\r\n                    const querySnapshot = await getDocs(collection(db, collectionName));\r\n                    documents = querySnapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }));\r\n                }\r\n\r\n                setData(documents);\r\n\r\n                console.log(\"Data fetched :- \",documents);\r\n            } catch (error) {\r\n                console.error(\"Error fetching data: \", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [collectionName]);\r\n\r\n    return [data];\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,SAASC,EAAE,QAAQ,uBAAuB,CAAC,CAAC;;AAE5C,MAAMC,QAAQ,GAAIC,cAAc,IAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,IAAIC,SAAS,GAAG,EAAE;QAElB,IAAIL,cAAc,KAAK,UAAU,EAAE;UAC/B;UACA,MAAMM,aAAa,GAAG,MAAMT,OAAO,CAACD,UAAU,CAACE,EAAE,EAAEE,cAAc,CAAC,CAAC;UACnEK,SAAS,GAAGC,aAAa,CAACC,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;YACvCC,EAAE,EAAED,GAAG,CAACC,EAAE;YACV,GAAGD,GAAG,CAACP,IAAI,CAAC;UAChB,CAAC,CAAC,CAAC;QACP,CAAC,MAAM,IAAIF,cAAc,KAAK,UAAU,IAAIA,cAAc,KAAK,aAAa,EAAE;UAC1E;UACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaZ,cAAc,OAAO,CAAC;UAChE,MAAMa,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UACtCT,SAAS,GAAGQ,QAAQ;QACxB,CAAC,MAEI,IAAGb,cAAc,KAAK,SAAS,EAAC;UACjC,MAAMM,aAAa,GAAG,MAAMT,OAAO,CAACD,UAAU,CAACE,EAAE,EAAEE,cAAc,CAAC,CAAC;UACnEK,SAAS,GAAGC,aAAa,CAACC,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;YACvCC,EAAE,EAAED,GAAG,CAACC,EAAE;YACV,GAAGD,GAAG,CAACP,IAAI,CAAC;UAChB,CAAC,CAAC,CAAC;QACP;QAEAC,OAAO,CAACE,SAAS,CAAC;QAElBU,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACX,SAAS,CAAC;MAC7C,CAAC,CAAC,OAAOY,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDb,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,OAAO,CAACE,IAAI,CAAC;AACjB,CAAC;AAACD,EAAA,CA1CIF,QAAQ;AA4Cd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}