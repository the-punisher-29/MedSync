{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\MedSync\\\\src\\\\screens\\\\SignInScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Bounce from 'react-reveal/Bounce';\nimport { Link, useHistory } from 'react-router-dom';\nimport Brand from '../components/Brand';\nimport Button from '../components/Form/Button';\nimport GoogleSignIn from '../components/Form/GoogleSignIn';\nimport TextField from '../components/Form/TextField';\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInScreen = () => {\n  _s();\n  const [userInput, setUserInput] = useState({\n    email: '',\n    password: ''\n  });\n  const [isAdmin, setIsAdmin] = useState(false); // Toggle for user/admin tab\n  const {\n    signInUser,\n    signInWithGoogle\n  } = useAuth();\n  const history = useHistory();\n  const allowedAdminEmails = ['b22es006@iitj.ac.in', 'b22cs101@iitj.ac.in', 'b22cs014@iitj.ac.in'];\n\n  // Handle form input changes\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setUserInput(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle regular user form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await signInUser(userInput.email, userInput.password);\n\n    // Redirect based on user type\n    if (allowedAdminEmails.includes(userInput.email)) {\n      history.replace('/admin'); // Use replace to avoid back navigation to root\n    } else {\n      history.push('/'); // Redirect regular user to dashboard\n    }\n  };\n\n  // Handle Google Sign-In with immediate admin check\n  const handleGoogleSignIn = async () => {\n    try {\n      const result = await signInWithGoogle(); // Assuming this returns a result object\n      const user = result.user;\n      console.log(\"Signed in user:\", user); // Log user info for debugging\n\n      // Check if user is an admin and navigate accordingly\n      if (allowedAdminEmails.includes(user.email)) {\n        history.replace('/admin'); // Directly redirect to admin page if email is allowed\n      } else {\n        history.push('/'); // Redirect to user dashboard if not admin\n      }\n    } catch (error) {\n      console.error(\"Google sign-in failed:\", error);\n    }\n  };\n\n  // Form inputs configuration\n  const Inputs = [{\n    id: 1,\n    type: \"email\",\n    placeholder: \"Email\",\n    value: userInput.email,\n    name: 'email'\n  }, {\n    id: 2,\n    type: \"password\",\n    placeholder: \"Password\",\n    value: userInput.password,\n    name: 'password'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"h-screen w-full banner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-10\",\n      children: [/*#__PURE__*/_jsxDEV(Bounce, {\n        left: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hidden md:flex lg:flex flex-col justify-center items-center w-full h-screen\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-4/4 mx-auto\",\n            src: \"../../assets/signin.png\",\n            alt: \"signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bounce, {\n        right: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col justify-center items-center h-screen\",\n          children: [/*#__PURE__*/_jsxDEV(Brand, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-6 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsAdmin(false),\n              className: `px-4 py-2 ${!isAdmin ? \"bg-blue-500 text-white\" : \"text-blue-500\"}`,\n              children: \"User Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsAdmin(true),\n              className: `px-4 py-2 ${isAdmin ? \"bg-blue-500 text-white\" : \"text-blue-500\"}`,\n              children: \"Admin Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"bg-white w-3/5 mt-6 p-4 rounded-lg shadow-lg\",\n            onSubmit: handleSubmit,\n            children: [!isAdmin ?\n            /*#__PURE__*/\n            // Regular User Login Form\n            _jsxDEV(\"div\", {\n              className: \"flex flex-col space-y-6\",\n              children: Inputs.map(input => /*#__PURE__*/_jsxDEV(TextField, {\n                type: input.type,\n                placeholder: input.placeholder,\n                value: input.value,\n                name: input.name,\n                onChange: handleChange\n              }, input.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this) :\n            /*#__PURE__*/\n            // Admin Login with Google only\n            _jsxDEV(\"p\", {\n              className: \"text-gray-600 text-center mt-4\",\n              children: \"Use Sign In with Google for Admin Access\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), !isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n              text: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-base text-primary text-center my-6 hover:underline\",\n                children: \"First Time? Create Account Here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(GoogleSignIn, {\n              text: isAdmin ? \"Sign In as Admin\" : \"Sign In With Google\",\n              onClick: handleGoogleSignIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(SignInScreen, \"BE7tpwCU1dxfhueschNTGqTMjFU=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c = SignInScreen;\nexport default SignInScreen;\nvar _c;\n$RefreshReg$(_c, \"SignInScreen\");","map":{"version":3,"names":["React","useState","Bounce","Link","useHistory","Brand","Button","GoogleSignIn","TextField","useAuth","jsxDEV","_jsxDEV","SignInScreen","_s","userInput","setUserInput","email","password","isAdmin","setIsAdmin","signInUser","signInWithGoogle","history","allowedAdminEmails","handleChange","e","value","name","target","prev","handleSubmit","preventDefault","result","includes","replace","push","handleGoogleSignIn","user","console","log","error","Inputs","id","type","placeholder","className","children","left","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","right","onClick","onSubmit","map","input","onChange","text","to","_c","$RefreshReg$"],"sources":["E:/Pr/Web D/MedSync/src/screens/SignInScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Brand from '../components/Brand';\r\nimport Button from '../components/Form/Button';\r\nimport GoogleSignIn from '../components/Form/GoogleSignIn';\r\nimport TextField from '../components/Form/TextField';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst SignInScreen = () => {\r\n    const [userInput, setUserInput] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [isAdmin, setIsAdmin] = useState(false); // Toggle for user/admin tab\r\n    const { signInUser, signInWithGoogle } = useAuth();\r\n    const history = useHistory();\r\n\r\n    const allowedAdminEmails = ['b22es006@iitj.ac.in', 'b22cs101@iitj.ac.in', 'b22cs014@iitj.ac.in'];\r\n\r\n    // Handle form input changes\r\n    const handleChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setUserInput((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    // Handle regular user form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const result = await signInUser(userInput.email, userInput.password);\r\n\r\n        // Redirect based on user type\r\n        if (allowedAdminEmails.includes(userInput.email)) {\r\n            history.replace('/admin'); // Use replace to avoid back navigation to root\r\n        } else {\r\n            history.push('/'); // Redirect regular user to dashboard\r\n        }\r\n    };\r\n\r\n// Handle Google Sign-In with immediate admin check\r\nconst handleGoogleSignIn = async () => {\r\n    try {\r\n        const result = await signInWithGoogle();  // Assuming this returns a result object\r\n        const user = result.user;\r\n\r\n        console.log(\"Signed in user:\", user); // Log user info for debugging\r\n\r\n        // Check if user is an admin and navigate accordingly\r\n        if (allowedAdminEmails.includes(user.email)) {\r\n            history.replace('/admin'); // Directly redirect to admin page if email is allowed\r\n        } else {\r\n            history.push('/'); // Redirect to user dashboard if not admin\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Google sign-in failed:\", error);\r\n    }\r\n};\r\n\r\n    // Form inputs configuration\r\n    const Inputs = [\r\n        { id: 1, type: \"email\", placeholder: \"Email\", value: userInput.email, name: 'email' },\r\n        { id: 2, type: \"password\", placeholder: \"Password\", value: userInput.password, name: 'password' },\r\n    ];\r\n\r\n    return (\r\n        <main className=\"h-screen w-full banner\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-10\">\r\n                {/* Image Section */}\r\n                <Bounce left>\r\n                    <div className=\"hidden md:flex lg:flex flex-col justify-center items-center w-full h-screen\">\r\n                        <img className=\"w-4/4 mx-auto\" src=\"../../assets/signin.png\" alt=\"signin\" />\r\n                    </div>\r\n                </Bounce>\r\n\r\n                {/* Form Section */}\r\n                <Bounce right>\r\n                    <div className=\"flex flex-col justify-center items-center h-screen\">\r\n                        {/* Logo */}\r\n                        <Brand />\r\n\r\n                        {/* Tabs for User and Admin Login */}\r\n                        <div className=\"flex space-x-6 mt-4\">\r\n                            <button \r\n                                onClick={() => setIsAdmin(false)} \r\n                                className={`px-4 py-2 ${!isAdmin ? \"bg-blue-500 text-white\" : \"text-blue-500\"}`}>\r\n                                User Login\r\n                            </button>\r\n                            <button \r\n                                onClick={() => setIsAdmin(true)} \r\n                                className={`px-4 py-2 ${isAdmin ? \"bg-blue-500 text-white\" : \"text-blue-500\"}`}>\r\n                                Admin Login\r\n                            </button>\r\n                        </div>\r\n\r\n                        {/* Form */}\r\n                        <form className=\"bg-white w-3/5 mt-6 p-4 rounded-lg shadow-lg\" onSubmit={handleSubmit}>\r\n                            {!isAdmin ? (\r\n                                // Regular User Login Form\r\n                                <div className=\"flex flex-col space-y-6\">\r\n                                    {Inputs.map((input) => (\r\n                                        <TextField\r\n                                            key={input.id}\r\n                                            type={input.type}\r\n                                            placeholder={input.placeholder}\r\n                                            value={input.value}\r\n                                            name={input.name}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n                            ) : (\r\n                                // Admin Login with Google only\r\n                                <p className=\"text-gray-600 text-center mt-4\">Use Sign In with Google for Admin Access</p>\r\n                            )}\r\n                            {!isAdmin && <Button text=\"Sign In\" />}\r\n                            <Link to=\"/signup\">\r\n                                <p className=\"text-base text-primary text-center my-6 hover:underline\">\r\n                                    First Time? Create Account Here.\r\n                                </p>\r\n                            </Link>\r\n\r\n                            {/* Google Sign-In Button */}\r\n                            <GoogleSignIn text={isAdmin ? \"Sign In as Admin\" : \"Sign In With Google\"} onClick={handleGoogleSignIn} />\r\n                        </form>\r\n                    </div>\r\n                </Bounce>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default SignInScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}