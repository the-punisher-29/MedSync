{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\MedSync\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const auth = getAuth();\n\n  // Sign in with Google\n  const signInWithGoogle = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user; // this will contain the user info after successful login\n      setUser(user); // update user state in context\n      return user; // return user object to be used in other components\n    } catch (error) {\n      console.error(\"Error during Google sign-in:\", error);\n      throw error; // propagate the error to handle it in the component\n    }\n  };\n  const signOutUser = () => {\n    setUser(null);\n    auth.signOut();\n  };\n\n  // Persist user state across refresh\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(setUser);\n    return () => unsubscribe(); // Cleanup subscription on component unmount\n  }, [auth]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      signInWithGoogle,\n      signOutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getAuth","GoogleAuthProvider","signInWithPopup","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","auth","signInWithGoogle","provider","result","error","console","signOutUser","signOut","unsubscribe","onAuthStateChanged","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Pr/Web D/MedSync/src/hooks/useAuth.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const auth = getAuth();\r\n\r\n  // Sign in with Google\r\n  const signInWithGoogle = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user; // this will contain the user info after successful login\r\n      setUser(user); // update user state in context\r\n      return user; // return user object to be used in other components\r\n    } catch (error) {\r\n      console.error(\"Error during Google sign-in:\", error);\r\n      throw error; // propagate the error to handle it in the component\r\n    }\r\n  };\r\n\r\n  const signOutUser = () => {\r\n    setUser(null);\r\n    auth.signOut();\r\n  };\r\n\r\n  // Persist user state across refresh\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(setUser);\r\n    return () => unsubscribe(); // Cleanup subscription on component unmount\r\n  }, [auth]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, signInWithGoogle, signOutUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOT,UAAU,CAACO,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMgB,IAAI,GAAGb,OAAO,CAAC,CAAC;;EAEtB;EACA,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,IAAId,kBAAkB,CAAC,CAAC;IACzC,IAAI;MACF,MAAMe,MAAM,GAAG,MAAMd,eAAe,CAACW,IAAI,EAAEE,QAAQ,CAAC;MACpD,MAAMJ,IAAI,GAAGK,MAAM,CAACL,IAAI,CAAC,CAAC;MAC1BC,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;MACf,OAAOA,IAAI,CAAC,CAAC;IACf,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBP,OAAO,CAAC,IAAI,CAAC;IACbC,IAAI,CAACO,OAAO,CAAC,CAAC;EAChB,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACd,MAAMsB,WAAW,GAAGR,IAAI,CAACS,kBAAkB,CAACV,OAAO,CAAC;IACpD,OAAO,MAAMS,WAAW,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,oBACET,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEb,IAAI;MAAEG,gBAAgB;MAAEK;IAAY,CAAE;IAAAV,QAAA,EAClEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,GAAA,CAlCWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}