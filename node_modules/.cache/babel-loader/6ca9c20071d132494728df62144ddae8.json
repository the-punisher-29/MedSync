{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef, keyframes, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { VisuallyHidden } from \"@chakra-ui/visually-hidden\";\nimport * as React from \"react\";\nvar spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\n\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\nexport var Spinner = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyleConfig(\"Spinner\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    {\n      label = \"Loading...\",\n      thickness = \"2px\",\n      speed = \"0.45s\",\n      emptyColor = \"transparent\",\n      className\n    } = _omitThemingProps,\n    rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"label\", \"thickness\", \"speed\", \"emptyColor\", \"className\"]);\n  var _className = cx(\"chakra-spinner\", className);\n  var spinnerStyles = _extends({\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: spin + \" \" + speed + \" linear infinite\"\n  }, styles);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: spinnerStyles,\n    className: _className\n  }, rest), label && /*#__PURE__*/React.createElement(VisuallyHidden, null, label));\n});\nif (__DEV__) {\n  Spinner.displayName = \"Spinner\";\n}","map":{"version":3,"sources":["../../src/spinner.tsx"],"names":["chakra","forwardRef","keyframes","omitThemingProps","useStyleConfig","cx","__DEV__","VisuallyHidden","React","spin","transform","Spinner","props","ref","styles","label","thickness","speed","emptyColor","className","rest","_className","spinnerStyles","display","borderColor","borderStyle","borderRadius","borderWidth","borderBottomColor","borderLeftColor","animation","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,gBAJF,EAMEC,cANF,QAQO,mBARP;AASA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,IAAI,GAAGP,SAAS,CAAC;EACrB,IAAA,EAAM;IACJQ,SAAS,EAAE;EADP,CADe;EAIrB,MAAA,EAAQ;IACNA,SAAS,EAAE;EADL;AAJa,CAAD,CAAtB;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,OAAO,GAAA,aAAGV,UAAU,CAAsB,CAACW,KAAD,EAAQC,GAAR,KAAgB;EACrE,IAAMC,MAAM,GAAGV,cAAc,CAAC,SAAD,EAAYQ,KAAZ,CAA7B;EAEA,IAAA,iBAAA,GAOIT,gBAAgB,CAACS,KAAD,CAPpB;IAAM;MACJG,KAAK,GAAG,YADJ;MAEJC,SAAS,GAAG,KAFR;MAGJC,KAAK,GAAG,OAHJ;MAIJC,UAAU,GAAG,aAJT;MAKJC;IALI,CAAN,GAAA,iBAAA;IAMKC,IANL,GAAA,6BAAA,CAAA,iBAAA,EAAA,CAAA,OAAA,EAAA,WAAA,EAAA,OAAA,EAAA,YAAA,EAAA,WAAA,CAAA,CAAA;EASA,IAAMC,UAAU,GAAGhB,EAAE,CAAC,gBAAD,EAAmBc,SAAnB,CAArB;EAEA,IAAMG,aAAa,GAAA,QAAA,CAAA;IACjBC,OAAO,EAAE,cADQ;IAEjBC,WAAW,EAAE,cAFI;IAGjBC,WAAW,EAAE,OAHI;IAIjBC,YAAY,EAAE,SAJG;IAKjBC,WAAW,EAAEX,SALI;IAMjBY,iBAAiB,EAAEV,UANF;IAOjBW,eAAe,EAAEX,UAPA;IAQjBY,SAAS,EAAKrB,IAAL,GAAA,GAAA,GAAaQ,KAAb,GAAA;EARQ,CAAA,EASdH,MATc,CAAnB;EAYA,OAAA,aACE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAQ,GAAR,EAAA,QAAA,CAAA;IACE,GAAG,EAAED,GADP;IAEE,KAAK,EAAES,aAFT;IAGE,SAAS,EAAED;EAHb,CAAA,EAIMD,IAJN,CAAA,EAMGL,KAAK,IAAA,aAAI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA,IAAA,EAAiBA,KAAjB,CANZ,CADF;AAUD,CApCgC,CAA1B;AAsCP,IAAIT,OAAJ,EAAa;EACXK,OAAO,CAACoB,WAARpB,GAAsB,SAAtBA;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { VisuallyHidden } from \"@chakra-ui/visually-hidden\"\nimport * as React from \"react\"\n\nconst spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\",\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\",\n  },\n})\n\ninterface SpinnerOptions {\n  /**\n   * The color of the empty area in the spinner\n   */\n  emptyColor?: string\n  /**\n   * The color of the spinner\n   */\n  color?: string\n  /**\n   * The thickness of the spinner\n   * @example\n   * ```jsx\n   * <Spinner thickness=\"4px\"/>\n   * ```\n   */\n  thickness?: string\n  /**\n   * The speed of the spinner.\n   * @example\n   * ```jsx\n   * <Spinner speed=\"0.2s\"/>\n   * ```\n   */\n  speed?: string\n  /**\n   * For accessibility, it is important to add a fallback loading text.\n   * This text will be visible to screen readers.\n   */\n  label?: string\n}\n\nexport interface SpinnerProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof SpinnerOptions>,\n    SpinnerOptions,\n    ThemingProps<\"Spinner\"> {}\n\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\nexport const Spinner = forwardRef<SpinnerProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Spinner\", props)\n\n  const {\n    label = \"Loading...\",\n    thickness = \"2px\",\n    speed = \"0.45s\",\n    emptyColor = \"transparent\",\n    className,\n    ...rest\n  } = omitThemingProps(props)\n\n  const _className = cx(\"chakra-spinner\", className)\n\n  const spinnerStyles = {\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: `${spin} ${speed} linear infinite`,\n    ...styles,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={spinnerStyles}\n      className={_className}\n      {...rest}\n    >\n      {label && <VisuallyHidden>{label}</VisuallyHidden>}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  Spinner.displayName = \"Spinner\"\n}\n"]},"metadata":{},"sourceType":"module"}