{"ast":null,"code":"import * as React from \"react\";\nexport function useButtonType(value) {\n  var [isButton, setIsButton] = React.useState(!value);\n  var refCallback = React.useCallback(node => {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  var type = isButton ? \"button\" : undefined;\n  return {\n    ref: refCallback,\n    type\n  };\n}","map":{"version":3,"sources":["../../src/use-button-type.tsx"],"names":["React","useButtonType","value","isButton","setIsButton","useState","refCallback","useCallback","node","tagName","type","undefined","ref"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;EACvD,IAAM,CAACC,QAAD,EAAWC,WAAX,CAAA,GAA0BJ,KAAK,CAACK,QAANL,CAAe,CAACE,KAAhBF,CAAhC;EACA,IAAMM,WAAW,GAAG,KAAK,CAACC,WAAN,CAAmBC,IAAD,IAA8B;IAClE,IAAI,CAACA,IAAL,EAAW;IACXJ,WAAW,CAACI,IAAI,CAACC,OAALD,KAAiB,QAAlB,CAAXJ;EACD,CAHmB,EAGjB,EAHiB,CAApB;EAIA,IAAMM,IAAI,GAAGP,QAAQ,GAAG,QAAH,GAAcQ,SAAnC;EACA,OAAO;IAAEC,GAAG,EAAEN,WAAP;IAAoBI;EAApB,CAAP;AACD","sourcesContent":["import * as React from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = React.useState(!value)\n  const refCallback = React.useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n"]},"metadata":{},"sourceType":"module"}