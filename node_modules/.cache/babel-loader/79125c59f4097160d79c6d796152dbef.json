{"ast":null,"code":"var _jsxFileName = \"/Users/arman_gupta/Documents/GitHub/MedSync/src/routes/PublicRoute.js\",\n  _s = $RefreshSig$();\nimport { css } from \"@emotion/react\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport GridLoader from \"react-spinners/GridLoader\";\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nconst PublicRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n  const {\n    user,\n    isLoading\n  } = useAuth();\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(GridLoader, {\n        color: \"#1d4ed8\",\n        css: override,\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: ({\n      location\n    }) => !user.displayName ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(PublicRoute, \"6lKHjqCqGIRsHh92bje8H78laow=\", false, function () {\n  return [useAuth];\n});\n_c = PublicRoute;\nexport default PublicRoute;\nvar _c;\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"names":["css","React","Redirect","Route","GridLoader","useAuth","jsxDEV","_jsxDEV","override","PublicRoute","children","rest","_s","user","isLoading","className","color","size","fileName","_jsxFileName","lineNumber","columnNumber","render","location","displayName","to","pathname","state","from","_c","$RefreshReg$"],"sources":["/Users/arman_gupta/Documents/GitHub/MedSync/src/routes/PublicRoute.js"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport GridLoader from \"react-spinners/GridLoader\";\nimport useAuth from '../hooks/useAuth';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst PublicRoute = ({ children, ...rest }) => {\n    const { user, isLoading } = useAuth();\n    if (isLoading) {\n        return (\n            <div className=\"flex flex-col items-center justify-center h-screen\">\n                <GridLoader color=\"#1d4ed8\" css={override} size={25} />\n\n            </div>\n        )\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                !user.displayName ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    )\n}\n\nexport default PublicRoute\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAClD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGR,GAAG;AACpB;AACA;AACA;AACA,CAAC;AAED,MAAMS,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGT,OAAO,CAAC,CAAC;EACrC,IAAIS,SAAS,EAAE;IACX,oBACIP,OAAA;MAAKQ,SAAS,EAAC,oDAAoD;MAAAL,QAAA,eAC/DH,OAAA,CAACH,UAAU;QAACY,KAAK,EAAC,SAAS;QAAChB,GAAG,EAAEQ,QAAS;QAACS,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtD,CAAC;EAEd;EAEA,oBACId,OAAA,CAACJ,KAAK;IAAA,GACEQ,IAAI;IACRW,MAAM,EAAEA,CAAC;MAAEC;IAAS,CAAC,KACjB,CAACV,IAAI,CAACW,WAAW,GACbd,QAAQ,gBAERH,OAAA,CAACL,QAAQ;MACLuB,EAAE,EAAE;QACAC,QAAQ,EAAE,GAAG;QACbC,KAAK,EAAE;UAAEC,IAAI,EAAEL;QAAS;MAC5B;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAER;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAT,EAAA,CA5BKH,WAAW;EAAA,QACeJ,OAAO;AAAA;AAAAwB,EAAA,GADjCpB,WAAW;AA8BjB,eAAeA,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}