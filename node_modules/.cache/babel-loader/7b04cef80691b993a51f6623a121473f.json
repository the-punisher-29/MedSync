{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\MedSync\\\\src\\\\screens\\\\ProductsScreen.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Bounce from 'react-reveal/Bounce';\n// import Heading from '../components/Heading';\n// import Product from '../components/products/Product';\n// import useFetch from '../hooks/useFetch';\n\n// const ProductsScreen = () => {\n//     const [data, setData] = useState([]);\n//     const [searchQuery, setSearchQuery] = useState('');\n//     const [isLoading, setIsLoading] = useState(true);\n\n//     // Fetch products using the useFetch custom hook\n//     const [fetchedData] = useFetch('products');\n\n//     useEffect(() => {\n//         // Ensure fetchedData is available before setting data\n//         if (fetchedData) {\n//             setData(fetchedData);\n//             setIsLoading(false);\n//         }\n//     }, [fetchedData]);\n\n//     // Filter products based on the search query using the title field\n//     const filteredData = data.filter(product =>\n//         product.title && product.title.toLowerCase().includes(searchQuery.toLowerCase())\n//     );\n\n//     // Log filtered data for debugging\n//     useEffect(() => {\n//         console.log('Filtered Data:', filteredData);\n//     }, [filteredData]);\n\n//     // Handle search input change\n//     const handleSearchChange = (e) => {\n//         setSearchQuery(e.target.value);\n//     };\n\n//     // Display loading spinner or products based on data\n//     if (isLoading) {\n//         return <div>Loading...</div>; // Or display a loading spinner\n//     }\n\n//     return (\n//         <section className=\"max-w-screen-xl py-24 mx-auto px-6\">\n//             {/* Heading */}\n//             <Heading title=\"Products\" />\n\n//             {/* Search Bar */}\n//             <div className=\"mb-6 flex justify-center\">\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search Products...\"\n//                     value={searchQuery}\n//                     onChange={handleSearchChange}\n//                     className=\"w-full md:w-1/2 p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\"\n//                 />\n//             </div>\n\n//             {/* Products */}\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10 py-6\">\n//                 {(searchQuery ? filteredData : data).map(product => (\n//                     <Bounce left key={product.id}>\n//                         <Product {...product} />\n//                     </Bounce>\n//                 ))}\n//             </div>\n//         </section>\n//     );\n// };\n\n// export default ProductsScreen;\n\nimport React, { useState, useEffect } from 'react';\nimport Bounce from 'react-reveal/Bounce';\nimport Heading from '../components/Heading';\nimport Product from '../components/products/Product';\nimport useFetch from '../hooks/useFetch';\nimport Navbar from '../components/Navbar/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductsScreen = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch products from the Firestore collection 'products'\n  const [fetchedData] = useFetch('products'); // Assuming this fetches the data from Firestore\n\n  useEffect(() => {\n    // Ensure fetchedData is available before setting data\n    if (fetchedData) {\n      setData(fetchedData);\n      console.log(\"Data of Products :- \", fetchedData);\n      setIsLoading(false);\n    }\n  }, [fetchedData]);\n\n  // Filter products based on the search query using the title field\n  const filteredData = data.filter(product => product.title && product.title.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Group products by type (assuming each product has a 'type' field)\n  const groupedData = filteredData.reduce((acc, product) => {\n    const {\n      type\n    } = product; // Assuming 'type' is the field to categorize\n    if (type) {\n      if (!acc[type]) acc[type] = [];\n      acc[type].push(product);\n    }\n    return acc;\n  }, {});\n\n  // Log grouped data for debugging\n  useEffect(() => {\n    console.log('Grouped Data:', groupedData);\n  }, [groupedData]);\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  // Display loading spinner or products based on data\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 16\n    }, this); // Or display a loading spinner\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"max-w-screen-xl py-24 mx-auto px-6\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search Products...\",\n          value: searchQuery,\n          onChange: handleSearchChange,\n          className: \"w-full md:w-1/2 p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), Object.keys(groupedData).map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold text-gray-700\",\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-lg text-gray-500\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10 py-6\",\n            children: groupedData[type].map(product => /*#__PURE__*/_jsxDEV(Bounce, {\n              left: true,\n              children: /*#__PURE__*/_jsxDEV(Product, {\n                ...product\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this)\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProductsScreen, \"cgDvQWR/85w9XcYcuLvWK3tocp8=\", false, function () {\n  return [useFetch];\n});\n_c = ProductsScreen;\nexport default ProductsScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductsScreen\");","map":{"version":3,"names":["React","useState","useEffect","Bounce","Heading","Product","useFetch","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductsScreen","_s","data","setData","searchQuery","setSearchQuery","isLoading","setIsLoading","fetchedData","console","log","filteredData","filter","product","title","toLowerCase","includes","groupedData","reduce","acc","type","push","handleSearchChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","onChange","Object","keys","map","left","id","_c","$RefreshReg$"],"sources":["E:/Pr/Web D/MedSync/src/screens/ProductsScreen.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Bounce from 'react-reveal/Bounce';\r\n// import Heading from '../components/Heading';\r\n// import Product from '../components/products/Product';\r\n// import useFetch from '../hooks/useFetch';\r\n\r\n// const ProductsScreen = () => {\r\n//     const [data, setData] = useState([]);\r\n//     const [searchQuery, setSearchQuery] = useState('');\r\n//     const [isLoading, setIsLoading] = useState(true);\r\n\r\n//     // Fetch products using the useFetch custom hook\r\n//     const [fetchedData] = useFetch('products');\r\n\r\n//     useEffect(() => {\r\n//         // Ensure fetchedData is available before setting data\r\n//         if (fetchedData) {\r\n//             setData(fetchedData);\r\n//             setIsLoading(false);\r\n//         }\r\n//     }, [fetchedData]);\r\n\r\n//     // Filter products based on the search query using the title field\r\n//     const filteredData = data.filter(product =>\r\n//         product.title && product.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n//     );\r\n\r\n//     // Log filtered data for debugging\r\n//     useEffect(() => {\r\n//         console.log('Filtered Data:', filteredData);\r\n//     }, [filteredData]);\r\n\r\n//     // Handle search input change\r\n//     const handleSearchChange = (e) => {\r\n//         setSearchQuery(e.target.value);\r\n//     };\r\n\r\n//     // Display loading spinner or products based on data\r\n//     if (isLoading) {\r\n//         return <div>Loading...</div>; // Or display a loading spinner\r\n//     }\r\n\r\n//     return (\r\n//         <section className=\"max-w-screen-xl py-24 mx-auto px-6\">\r\n//             {/* Heading */}\r\n//             <Heading title=\"Products\" />\r\n            \r\n//             {/* Search Bar */}\r\n//             <div className=\"mb-6 flex justify-center\">\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"Search Products...\"\r\n//                     value={searchQuery}\r\n//                     onChange={handleSearchChange}\r\n//                     className=\"w-full md:w-1/2 p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\"\r\n//                 />\r\n//             </div>\r\n\r\n//             {/* Products */}\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10 py-6\">\r\n//                 {(searchQuery ? filteredData : data).map(product => (\r\n//                     <Bounce left key={product.id}>\r\n//                         <Product {...product} />\r\n//                     </Bounce>\r\n//                 ))}\r\n//             </div>\r\n//         </section>\r\n//     );\r\n// };\r\n\r\n// export default ProductsScreen;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport Heading from '../components/Heading';\r\nimport Product from '../components/products/Product';\r\nimport useFetch from '../hooks/useFetch';\r\nimport Navbar from '../components/Navbar/Navbar'\r\n\r\nconst ProductsScreen = () => {\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // Fetch products from the Firestore collection 'products'\r\n    const [fetchedData] = useFetch('products'); // Assuming this fetches the data from Firestore\r\n\r\n    useEffect(() => {\r\n        // Ensure fetchedData is available before setting data\r\n        if (fetchedData) {\r\n            setData(fetchedData);\r\n            console.log(\"Data of Products :- \",fetchedData);\r\n            setIsLoading(false);\r\n        }\r\n    }, [fetchedData]);\r\n\r\n    // Filter products based on the search query using the title field\r\n    const filteredData = data.filter(product =>\r\n        product.title && product.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    // Group products by type (assuming each product has a 'type' field)\r\n    const groupedData = filteredData.reduce((acc, product) => {\r\n        const { type } = product; // Assuming 'type' is the field to categorize\r\n        if (type) {\r\n            if (!acc[type]) acc[type] = [];\r\n            acc[type].push(product);\r\n        }\r\n        return acc;\r\n    }, {});\r\n\r\n    // Log grouped data for debugging\r\n    useEffect(() => {\r\n        console.log('Grouped Data:', groupedData);\r\n    }, [groupedData]);\r\n\r\n    // Handle search input change\r\n    const handleSearchChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n\r\n    // Display loading spinner or products based on data\r\n    if (isLoading) {\r\n        return <div>Loading...</div>; // Or display a loading spinner\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Navbar />\r\n        <section className=\"max-w-screen-xl py-24 mx-auto px-6\">\r\n            {/* Heading */}\r\n            <Heading title=\"Products\" />\r\n\r\n            {/* Search Bar */}\r\n            <div className=\"mb-6 flex justify-center\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search Products...\"\r\n                    value={searchQuery}\r\n                    onChange={handleSearchChange}\r\n                    className=\"w-full md:w-1/2 p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\"\r\n                />\r\n            </div>\r\n\r\n            {/* Render sections based on product type */}\r\n            {Object.keys(groupedData).map((type) => (\r\n                <div key={type} className=\"py-6\">\r\n                    {/* Type Heading */}\r\n                    <h2 className=\"text-3xl font-bold text-gray-700\">{type}</h2>\r\n                    <div className=\"mt-4 text-lg text-gray-500\">\r\n                        {/* Display products in the current type */}\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10 py-6\">\r\n                            {groupedData[type].map((product) => (\r\n                                <Bounce left key={product.id}>\r\n                                    <Product {...product} />\r\n                                </Bounce>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductsScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}