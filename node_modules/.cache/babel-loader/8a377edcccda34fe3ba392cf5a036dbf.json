{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { useForceUpdate, useSafeLayoutEffect } from \"@chakra-ui/hooks\";\nimport { isBrowser, __DEV__ } from \"@chakra-ui/utils\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { usePortalManager } from \"./portal-manager\";\nvar [PortalContextProvider, usePortalContext] = createContext({\n  strict: false,\n  name: \"PortalContext\"\n});\nvar PORTAL_CLASSNAME = \"chakra-portal\";\nvar PORTAL_SELECTOR = \".chakra-portal\";\nvar Container = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"chakra-portal-zIndex\",\n  style: {\n    position: \"absolute\",\n    zIndex: props.zIndex,\n    top: 0,\n    left: 0,\n    right: 0 // NB: Don't add `bottom: 0`, it makes the entire app unusable\n    // @see https://github.com/chakra-ui/chakra-ui/issues/3201\n  }\n}, props.children);\n/**\n * Portal that uses `document.body` as container\n */\n\nvar DefaultPortal = props => {\n  var {\n    appendToParentPortal,\n    children\n  } = props;\n  var tempNode = React.useRef(null);\n  var portal = React.useRef(null);\n  var forceUpdate = useForceUpdate();\n  var parentPortal = usePortalContext();\n  var manager = usePortalManager();\n  useSafeLayoutEffect(() => {\n    if (!tempNode.current) return;\n    var doc = tempNode.current.ownerDocument;\n    var host = appendToParentPortal ? parentPortal != null ? parentPortal : doc.body : doc.body;\n    if (!host) return;\n    portal.current = doc.createElement(\"div\");\n    portal.current.className = PORTAL_CLASSNAME;\n    host.appendChild(portal.current);\n    forceUpdate();\n    var portalNode = portal.current;\n    return () => {\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode);\n      }\n    };\n  }, []);\n  var _children = manager != null && manager.zIndex ? /*#__PURE__*/React.createElement(Container, {\n    zIndex: manager == null ? void 0 : manager.zIndex\n  }, children) : children;\n  return portal.current ? /*#__PURE__*/createPortal(/*#__PURE__*/React.createElement(PortalContextProvider, {\n    value: portal.current\n  }, _children), portal.current) : /*#__PURE__*/React.createElement(\"span\", {\n    ref: tempNode\n  });\n};\n\n/**\n * Portal that uses a custom container\n */\nvar ContainerPortal = props => {\n  var {\n    children,\n    containerRef,\n    appendToParentPortal\n  } = props;\n  var containerEl = containerRef.current;\n  var host = containerEl != null ? containerEl : isBrowser ? document.body : undefined;\n  var portal = React.useMemo(() => {\n    var node = containerEl == null ? void 0 : containerEl.ownerDocument.createElement(\"div\");\n    if (node) node.className = PORTAL_CLASSNAME;\n    return node;\n  }, [containerEl]);\n  var forceUpdate = useForceUpdate();\n  useSafeLayoutEffect(() => {\n    forceUpdate();\n  }, []);\n  useSafeLayoutEffect(() => {\n    if (!portal || !host) return;\n    host.appendChild(portal);\n    return () => {\n      host.removeChild(portal);\n    };\n  }, [portal, host]);\n  if (host && portal) {\n    return /*#__PURE__*/createPortal(/*#__PURE__*/React.createElement(PortalContextProvider, {\n      value: appendToParentPortal ? portal : null\n    }, children), portal);\n  }\n  return null;\n};\n\n/**\n * Portal\n *\n * Declarative component used to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * @see Docs https://chakra-ui.com/portal\n */\nexport function Portal(props) {\n  var {\n      containerRef\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"containerRef\"]);\n  return containerRef ? /*#__PURE__*/React.createElement(ContainerPortal, _extends({\n    containerRef: containerRef\n  }, rest)) : /*#__PURE__*/React.createElement(DefaultPortal, rest);\n}\nPortal.defaultProps = {\n  appendToParentPortal: true\n};\nPortal.className = PORTAL_CLASSNAME;\nPortal.selector = PORTAL_SELECTOR;\nif (__DEV__) {\n  Portal.displayName = \"Portal\";\n}","map":{"version":3,"sources":["../../src/portal.tsx"],"names":["useForceUpdate","useSafeLayoutEffect","isBrowser","__DEV__","createContext","React","createPortal","usePortalManager","PortalContextProvider","usePortalContext","strict","name","PORTAL_CLASSNAME","PORTAL_SELECTOR","Container","props","position","zIndex","top","left","right","children","DefaultPortal","appendToParentPortal","tempNode","useRef","portal","forceUpdate","parentPortal","manager","current","doc","ownerDocument","host","body","createElement","className","appendChild","portalNode","contains","removeChild","_children","ContainerPortal","containerRef","containerEl","document","undefined","useMemo","node","Portal","rest","defaultProps","selector","displayName"],"mappings":"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","sourcesContent":["import { useForceUpdate, useSafeLayoutEffect } from \"@chakra-ui/hooks\"\nimport { isBrowser, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { usePortalManager } from \"./portal-manager\"\n\ntype PortalContext = HTMLDivElement | null\n\nconst [PortalContextProvider, usePortalContext] = createContext<PortalContext>({\n  strict: false,\n  name: \"PortalContext\",\n})\n\nconst PORTAL_CLASSNAME = \"chakra-portal\"\nconst PORTAL_SELECTOR = `.chakra-portal`\n\nconst Container: React.FC<{ zIndex: number }> = (props) => (\n  <div\n    className=\"chakra-portal-zIndex\"\n    style={{\n      position: \"absolute\",\n      zIndex: props.zIndex,\n      top: 0,\n      left: 0,\n      right: 0,\n      // NB: Don't add `bottom: 0`, it makes the entire app unusable\n      // @see https://github.com/chakra-ui/chakra-ui/issues/3201\n    }}\n  >\n    {props.children}\n  </div>\n)\n\n/**\n * Portal that uses `document.body` as container\n */\nconst DefaultPortal: React.FC<{ appendToParentPortal?: boolean }> = (props) => {\n  const { appendToParentPortal, children } = props\n\n  const tempNode = React.useRef<HTMLDivElement | null>(null)\n  const portal = React.useRef<HTMLDivElement | null>(null)\n\n  const forceUpdate = useForceUpdate()\n\n  const parentPortal = usePortalContext()\n  const manager = usePortalManager()\n\n  useSafeLayoutEffect(() => {\n    if (!tempNode.current) return\n\n    const doc = tempNode.current!.ownerDocument\n    const host = appendToParentPortal ? parentPortal ?? doc.body : doc.body\n\n    if (!host) return\n\n    portal.current = doc.createElement(\"div\")\n    portal.current.className = PORTAL_CLASSNAME\n\n    host.appendChild(portal.current)\n    forceUpdate()\n\n    const portalNode = portal.current\n    return () => {\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode)\n      }\n    }\n  }, [])\n\n  const _children = manager?.zIndex ? (\n    <Container zIndex={manager?.zIndex}>{children}</Container>\n  ) : (\n    children\n  )\n\n  return portal.current ? (\n    createPortal(\n      <PortalContextProvider value={portal.current}>\n        {_children}\n      </PortalContextProvider>,\n      portal.current,\n    )\n  ) : (\n    <span ref={tempNode} />\n  )\n}\n\ninterface ContainerPortalProps {\n  containerRef: React.RefObject<HTMLElement | null>\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal that uses a custom container\n */\nconst ContainerPortal: React.FC<ContainerPortalProps> = (props) => {\n  const { children, containerRef, appendToParentPortal } = props\n  const containerEl = containerRef.current\n  const host = containerEl ?? (isBrowser ? document.body : undefined)\n\n  const portal = React.useMemo(() => {\n    const node = containerEl?.ownerDocument.createElement(\"div\")\n    if (node) node.className = PORTAL_CLASSNAME\n    return node\n  }, [containerEl])\n\n  const forceUpdate = useForceUpdate()\n\n  useSafeLayoutEffect(() => {\n    forceUpdate()\n  }, [])\n\n  useSafeLayoutEffect(() => {\n    if (!portal || !host) return\n    host.appendChild(portal)\n    return () => {\n      host.removeChild(portal)\n    }\n  }, [portal, host])\n\n  if (host && portal) {\n    return createPortal(\n      <PortalContextProvider value={appendToParentPortal ? portal : null}>\n        {children}\n      </PortalContextProvider>,\n      portal,\n    )\n  }\n\n  return null\n}\n\nexport interface PortalProps {\n  /**\n   * The `ref` to the component where the portal will be attached to.\n   */\n  containerRef?: React.RefObject<HTMLElement | null>\n  /**\n   * The content or node you'll like to portal\n   */\n  children: React.ReactNode\n  /**\n   * If `true`, the portal will check if it is within a parent portal\n   * and append itself to the parent's portal node.\n   * This provides nesting for portals.\n   *\n   * If `false`, the portal will always append to `document.body`\n   * regardless of nesting. It is used to opt out of portal nesting.\n   */\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal\n *\n * Declarative component used to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * @see Docs https://chakra-ui.com/portal\n */\n\nexport function Portal(props: PortalProps) {\n  const { containerRef, ...rest } = props\n  return containerRef ? (\n    <ContainerPortal containerRef={containerRef} {...rest} />\n  ) : (\n    <DefaultPortal {...rest} />\n  )\n}\n\nPortal.defaultProps = {\n  appendToParentPortal: true,\n}\n\nPortal.className = PORTAL_CLASSNAME\nPortal.selector = PORTAL_SELECTOR\n\nif (__DEV__) {\n  Portal.displayName = \"Portal\"\n}\n"]},"metadata":{},"sourceType":"module"}