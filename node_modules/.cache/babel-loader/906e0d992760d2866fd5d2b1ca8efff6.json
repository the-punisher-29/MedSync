{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\MedSync\\\\src\\\\contexts\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\n// src/contexts/AuthProvider.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const auth = getAuth();\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser); // Set the user when the auth state changes\n    });\n    return () => unsubscribe(); // Cleanup when the component unmounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","getAuth","onAuthStateChanged","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","auth","unsubscribe","currentUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Pr/Web D/MedSync/src/contexts/AuthProvider.js"],"sourcesContent":["// src/contexts/AuthProvider.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      setUser(currentUser); // Set the user when the auth state changes\r\n    });\r\n\r\n    return () => unsubscribe(); // Cleanup when the component unmounts\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMW,IAAI,GAAGV,OAAO,CAAC,CAAC;IACtB,MAAMW,WAAW,GAAGV,kBAAkB,CAACS,IAAI,EAAGE,WAAW,IAAK;MAC5DH,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF,OAAO,MAAMD,WAAW,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN;IAAK,CAAE;IAAAF,QAAA,EACnCA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACX,EAAA,CAjBIF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAmBlB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}