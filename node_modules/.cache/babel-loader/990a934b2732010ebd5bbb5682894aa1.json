{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\MedSync\\\\src\\\\routes\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { css } from \"@emotion/react\";\nimport React from 'react';\nimport { Navigate, Route } from 'react-router-dom';\nimport GridLoader from \"react-spinners/GridLoader\";\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nconst PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n  const {\n    user,\n    isLoading\n  } = useAuth();\n\n  // Show loading spinner while checking user authentication status\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(GridLoader, {\n        color: \"#1d4ed8\",\n        css: override,\n        size: 25\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If user is not authenticated, redirect to signin page\n  if (!user || !user.displayName) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/signin\",\n      state: {\n        from: rest.location\n      } // Pass the original location for redirect after login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If user is authenticated, render the children\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"6lKHjqCqGIRsHh92bje8H78laow=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["css","React","Navigate","Route","GridLoader","useAuth","jsxDEV","_jsxDEV","override","PrivateRoute","children","rest","_s","user","isLoading","className","color","size","fileName","_jsxFileName","lineNumber","columnNumber","displayName","to","state","from","location","element","_c","$RefreshReg$"],"sources":["E:/Pr/Web D/MedSync/src/routes/PrivateRoute.js"],"sourcesContent":["import { css } from \"@emotion/react\";\r\nimport React from 'react';\r\nimport { Navigate, Route } from 'react-router-dom';\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  const { user, isLoading } = useAuth();\r\n\r\n  // Show loading spinner while checking user authentication status\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-screen\">\r\n        <GridLoader color=\"#1d4ed8\" css={override} size={25} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If user is not authenticated, redirect to signin page\r\n  if (!user || !user.displayName) {\r\n    return (\r\n      <Navigate\r\n        to=\"/signin\"\r\n        state={{ from: rest.location }}  // Pass the original location for redirect after login\r\n      />\r\n    );\r\n  }\r\n\r\n  // If user is authenticated, render the children\r\n  return <Route {...rest} element={children} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAClD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGR,GAAG;AACpB;AACA;AACA;AACA,CAAC;AAED,MAAMS,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGT,OAAO,CAAC,CAAC;;EAErC;EACA,IAAIS,SAAS,EAAE;IACb,oBACEP,OAAA;MAAKQ,SAAS,EAAC,oDAAoD;MAAAL,QAAA,eACjEH,OAAA,CAACH,UAAU;QAACY,KAAK,EAAC,SAAS;QAAChB,GAAG,EAAEQ,QAAS;QAACS,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAEV;;EAEA;EACA,IAAI,CAACR,IAAI,IAAI,CAACA,IAAI,CAACS,WAAW,EAAE;IAC9B,oBACEf,OAAA,CAACL,QAAQ;MACPqB,EAAE,EAAC,SAAS;MACZC,KAAK,EAAE;QAAEC,IAAI,EAAEd,IAAI,CAACe;MAAS,CAAE,CAAE;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEN;;EAEA;EACA,oBAAOd,OAAA,CAACJ,KAAK;IAAA,GAAKQ,IAAI;IAAEgB,OAAO,EAAEjB;EAAS;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACT,EAAA,CAxBIH,YAAY;EAAA,QACYJ,OAAO;AAAA;AAAAuB,EAAA,GAD/BnB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}