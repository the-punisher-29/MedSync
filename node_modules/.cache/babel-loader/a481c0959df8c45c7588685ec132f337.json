{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport initializeAuthentication from '../config/firebase'; //initialize firebase  authentication\n\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const auth = getAuth();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true); //on State Change \n\n  useEffect(() => {\n    const unsubscribed = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n    return () => unsubscribed;\n  }, [auth]); //sign up functionality\n\n  const signUpUser = async (email, password, name, image) => {\n    setIsLoading(true);\n    await createUserWithEmailAndPassword(auth, email, password).then(res => {\n      setUser(res.user);\n      updateProfile(auth.currentUser, {\n        displayName: name,\n        photoURL: image\n      }).then(() => {\n        swal(\"Good job!\", \"Account has been created!\", \"success\");\n        history.push('/');\n        window.scrollTo(0, 100);\n      });\n    }).catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\")).finally(() => setIsLoading(false));\n  }; //sign in functionality\n\n\n  const signInUser = async (email, password) => {\n    setIsLoading(true);\n    await signInWithEmailAndPassword(auth, email, password).then(res => {\n      setUser(res.user);\n      swal(\"Sign in Successful!\", \"Welcome back !\", \"info\");\n      history.push('/');\n      window.scrollTo(0, 100);\n    }).catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\")).finally(() => setIsLoading(false));\n  }; //google sign in \n\n\n  const signInWithGoogle = async () => {\n    setIsLoading(true);\n    const googleProvider = new GoogleAuthProvider();\n    await signInWithPopup(auth, googleProvider).then(res => {\n      setUser(res.user);\n      swal(\"Good job!\", \"Account has been created!\", \"success\");\n      history.push('/');\n    }).catch(err => console.log(err.message)).finally(() => setIsLoading(false));\n  }; // sign out \n\n\n  const signOutUser = async () => {\n    setIsLoading(true);\n    await signOut(auth).then(() => {\n      setUser({});\n      swal(\"Logout Successful!\", \"You are logged out!\", \"success\");\n      history.push('/signin');\n    }).catch(err => {\n      swal(\"Something went wrong!\", `${err.message}`, \"error\");\n    }).finally(() => setIsLoading(false));\n  };\n\n  return {\n    user,\n    signInUser,\n    signUpUser,\n    signOutUser,\n    signInWithGoogle,\n    isLoading\n  };\n};\n\n_s(useFirebase, \"o9TOeKgZZnjpaHY94AVr78qCgsc=\", false, function () {\n  return [useHistory];\n});\n\nexport default useFirebase;","map":{"version":3,"sources":["E:/Pr/Web D/frmwrks/idea3/Phami-Pharma-ReactJS/src/hooks/useFirebase.js"],"names":["createUserWithEmailAndPassword","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithEmailAndPassword","signInWithPopup","signOut","updateProfile","useEffect","useState","useHistory","swal","initializeAuthentication","useFirebase","user","setUser","auth","history","isLoading","setIsLoading","unsubscribed","signUpUser","email","password","name","image","then","res","currentUser","displayName","photoURL","push","window","scrollTo","catch","err","message","finally","signInUser","signInWithGoogle","googleProvider","console","log","signOutUser"],"mappings":"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","sourcesContent":["import { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"firebase/auth\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport initializeAuthentication from '../config/firebase';\r\n\r\n//initialize firebase  authentication\r\ninitializeAuthentication()\r\n\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n    const auth = getAuth();\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    //on State Change \r\n    useEffect(() => {\r\n        const unsubscribed = onAuthStateChanged(auth, user => {\r\n            if (user) {\r\n                setUser(user)\r\n            }else{\r\n                setUser({})\r\n            }\r\n            setIsLoading(false);\r\n        })\r\n        return () => unsubscribed;\r\n\r\n    }, [auth])\r\n\r\n\r\n    //sign up functionality\r\n    const signUpUser = async (email, password, name, image) => {\r\n        setIsLoading(true);\r\n        await createUserWithEmailAndPassword(auth, email, password)\r\n            .then((res) => {\r\n                setUser(res.user)\r\n                updateProfile(auth.currentUser, {\r\n                    displayName: name,\r\n                    photoURL: image\r\n                }).then(() => {                    \r\n                    swal(\"Good job!\", \"Account has been created!\", \"success\");\r\n                    history.push('/');\r\n                    window.scrollTo(0, 100);\r\n                })\r\n\r\n            }).catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\")).finally(() => setIsLoading(false));\r\n    }\r\n\r\n    //sign in functionality\r\n    const signInUser = async (email, password) => {\r\n        setIsLoading(true);\r\n        await signInWithEmailAndPassword(auth, email, password)\r\n            .then(res => {\r\n                setUser(res.user);\r\n                swal(\"Sign in Successful!\", \"Welcome back !\", \"info\")\r\n                history.push('/');\r\n                                    window.scrollTo(0, 100);\r\n\r\n            })\r\n            .catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\")).finally(() => setIsLoading(false));\r\n    }\r\n\r\n    //google sign in \r\n    const signInWithGoogle = async () => {\r\n        setIsLoading(true);\r\n        const googleProvider = new GoogleAuthProvider();\r\n        await signInWithPopup(auth, googleProvider)\r\n            .then(res => {\r\n                setUser(res.user);\r\n                swal(\"Good job!\", \"Account has been created!\", \"success\");\r\n                history.push('/');\r\n            }).catch(err => console.log(err.message)).finally(() => setIsLoading(false));\r\n    }\r\n\r\n\r\n    // sign out \r\n    const signOutUser = async () => {\r\n        setIsLoading(true);\r\n        await signOut(auth).then(() => {\r\n            setUser({});\r\n            swal(\"Logout Successful!\", \"You are logged out!\", \"success\");\r\n            history.push('/signin')\r\n        }).catch((err) => {\r\n            swal(\"Something went wrong!\", `${err.message}`, \"error\")\r\n        }).finally(() => setIsLoading(false));\r\n\r\n    }\r\n\r\n\r\n    return {\r\n        user,\r\n        signInUser,\r\n        signUpUser,\r\n        signOutUser,\r\n        signInWithGoogle,\r\n        isLoading\r\n    }\r\n}\r\n\r\nexport default useFirebase\r\n"]},"metadata":{},"sourceType":"module"}