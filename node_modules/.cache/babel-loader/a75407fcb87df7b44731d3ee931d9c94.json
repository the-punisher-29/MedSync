{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { progressAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { generateStripe, getColor, mode } from \"@chakra-ui/theme-tools\";\nfunction filledStyle(props) {\n  var {\n    colorScheme: c,\n    theme: t,\n    isIndeterminate,\n    hasStripe\n  } = props;\n  var stripeStyle = mode(generateStripe(), generateStripe(\"1rem\", \"rgba(0,0,0,0.1)\"))(props);\n  var bgColor = mode(c + \".500\", c + \".200\")(props);\n  var gradient = \"linear-gradient(\\n    to right,\\n    transparent 0%,\\n    \" + getColor(t, bgColor) + \" 50%,\\n    transparent 100%\\n  )\";\n  var addStripe = !isIndeterminate && hasStripe;\n  return _extends({}, addStripe && stripeStyle, isIndeterminate ? {\n    bgImage: gradient\n  } : {\n    bgColor\n  });\n}\nvar baseStyleLabel = {\n  lineHeight: \"1\",\n  fontSize: \"0.25em\",\n  fontWeight: \"bold\",\n  color: \"white\"\n};\nvar baseStyleTrack = props => {\n  return {\n    bg: mode(\"gray.100\", \"whiteAlpha.300\")(props)\n  };\n};\nvar baseStyleFilledTrack = props => {\n  return _extends({\n    transitionProperty: \"common\",\n    transitionDuration: \"slow\"\n  }, filledStyle(props));\n};\nvar baseStyle = props => ({\n  label: baseStyleLabel,\n  filledTrack: baseStyleFilledTrack(props),\n  track: baseStyleTrack(props)\n});\nvar sizes = {\n  xs: {\n    track: {\n      h: \"0.25rem\"\n    }\n  },\n  sm: {\n    track: {\n      h: \"0.5rem\"\n    }\n  },\n  md: {\n    track: {\n      h: \"0.75rem\"\n    }\n  },\n  lg: {\n    track: {\n      h: \"1rem\"\n    }\n  }\n};\nvar defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\"\n};\nexport default {\n  parts: parts.keys,\n  sizes,\n  baseStyle,\n  defaultProps\n};","map":{"version":3,"sources":["../../../src/components/progress.ts"],"names":["progressAnatomy","parts","generateStripe","getColor","mode","filledStyle","props","colorScheme","c","theme","t","isIndeterminate","hasStripe","stripeStyle","bgColor","gradient","addStripe","bgImage","baseStyleLabel","lineHeight","fontSize","fontWeight","color","baseStyleTrack","bg","baseStyleFilledTrack","transitionProperty","transitionDuration","baseStyle","label","filledTrack","track","sizes","xs","h","sm","md","lg","defaultProps","size","keys"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,eAAe,IAAIC,KAA5B,QAAyC,oBAAzC;AACA,SACEC,cADF,EAEEC,QAFF,EAGEC,IAHF,QAOO,wBAPP;AAaA,SAASC,WAAT,CAAqBC,KAArB,EAAmE;EACjE,IAAM;IAAEC,WAAW,EAAEC,CAAf;IAAkBC,KAAK,EAAEC,CAAzB;IAA4BC,eAA5B;IAA6CC;EAA7C,CAAA,GAA2DN,KAAjE;EAEA,IAAMO,WAAW,GAAGT,IAAI,CACtBF,cAAc,CAAA,CADQ,EAEtBA,cAAc,CAAC,MAAD,EAAS,iBAAT,CAFQ,CAAJE,CAGlBE,KAHkBF,CAApB;EAKA,IAAMU,OAAO,GAAGV,IAAI,CAAII,CAAJ,GAAA,MAAA,EAAgBA,CAAhB,GAAA,MAAA,CAAJJ,CAA6BE,KAA7BF,CAAhB;EAEA,IAAMW,QAAQ,GAAA,4DAAA,GAGVZ,QAAQ,CAACO,CAAD,EAAII,OAAJ,CAHE,GAAA,kCAAd;EAOA,IAAME,SAAS,GAAG,CAACL,eAAD,IAAoBC,SAAtC;EAEA,OAAA,QAAA,CAAA,CAAA,CAAA,EACMI,SAAS,IAAIH,WADnB,EAEMF,eAAe,GAAG;IAAEM,OAAO,EAAEF;EAAX,CAAH,GAA2B;IAAED;EAAF,CAFhD,CAAA;AAID;AAED,IAAMI,cAAiC,GAAG;EACxCC,UAAU,EAAE,GAD4B;EAExCC,QAAQ,EAAE,QAF8B;EAGxCC,UAAU,EAAE,MAH4B;EAIxCC,KAAK,EAAE;AAJiC,CAA1C;AAOA,IAAMC,cAAmC,GAAIjB,KAAD,IAAW;EACrD,OAAO;IACLkB,EAAE,EAAEpB,IAAI,CAAC,UAAD,EAAa,gBAAb,CAAJA,CAAmCE,KAAnCF;EADC,CAAP;AAGD,CAJD;AAMA,IAAMqB,oBAAyC,GAAInB,KAAD,IAAW;EAC3D,OAAA,QAAA,CAAA;IACEoB,kBAAkB,EAAE,QADtB;IAEEC,kBAAkB,EAAE;EAFtB,CAAA,EAGKtB,WAAW,CAACC,KAAD,CAHhB,CAAA;AAKD,CAND;AAQA,IAAMsB,SAA2C,GAAItB,KAAD,KAAY;EAC9DuB,KAAK,EAAEX,cADuD;EAE9DY,WAAW,EAAEL,oBAAoB,CAACnB,KAAD,CAF6B;EAG9DyB,KAAK,EAAER,cAAc,CAACjB,KAAD;AAHyC,CAAZ,CAApD;AAMA,IAAM0B,KAAqD,GAAG;EAC5DC,EAAE,EAAE;IACFF,KAAK,EAAE;MAAEG,CAAC,EAAE;IAAL;EADL,CADwD;EAI5DC,EAAE,EAAE;IACFJ,KAAK,EAAE;MAAEG,CAAC,EAAE;IAAL;EADL,CAJwD;EAO5DE,EAAE,EAAE;IACFL,KAAK,EAAE;MAAEG,CAAC,EAAE;IAAL;EADL,CAPwD;EAU5DG,EAAE,EAAE;IACFN,KAAK,EAAE;MAAEG,CAAC,EAAE;IAAL;EADL;AAVwD,CAA9D;AAeA,IAAMI,YAAY,GAAG;EACnBC,IAAI,EAAE,IADa;EAEnBhC,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe;EACbN,KAAK,EAAEA,KAAK,CAACuC,IADA;EAEbR,KAFa;EAGbJ,SAHa;EAIbU;AAJa,CAAf","sourcesContent":["import { progressAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  generateStripe,\n  getColor,\n  mode,\n  PartsStyleFunction,\n  PartsStyleObject,\n  StyleFunctionProps,\n} from \"@chakra-ui/theme-tools\"\nimport type {\n  SystemStyleObject,\n  SystemStyleFunction,\n} from \"@chakra-ui/theme-tools\"\n\nfunction filledStyle(props: StyleFunctionProps): SystemStyleObject {\n  const { colorScheme: c, theme: t, isIndeterminate, hasStripe } = props\n\n  const stripeStyle = mode(\n    generateStripe(),\n    generateStripe(\"1rem\", \"rgba(0,0,0,0.1)\"),\n  )(props)\n\n  const bgColor = mode(`${c}.500`, `${c}.200`)(props)\n\n  const gradient = `linear-gradient(\n    to right,\n    transparent 0%,\n    ${getColor(t, bgColor)} 50%,\n    transparent 100%\n  )`\n\n  const addStripe = !isIndeterminate && hasStripe\n\n  return {\n    ...(addStripe && stripeStyle),\n    ...(isIndeterminate ? { bgImage: gradient } : { bgColor }),\n  }\n}\n\nconst baseStyleLabel: SystemStyleObject = {\n  lineHeight: \"1\",\n  fontSize: \"0.25em\",\n  fontWeight: \"bold\",\n  color: \"white\",\n}\n\nconst baseStyleTrack: SystemStyleFunction = (props) => {\n  return {\n    bg: mode(\"gray.100\", \"whiteAlpha.300\")(props),\n  }\n}\n\nconst baseStyleFilledTrack: SystemStyleFunction = (props) => {\n  return {\n    transitionProperty: \"common\",\n    transitionDuration: \"slow\",\n    ...filledStyle(props),\n  }\n}\n\nconst baseStyle: PartsStyleFunction<typeof parts> = (props) => ({\n  label: baseStyleLabel,\n  filledTrack: baseStyleFilledTrack(props),\n  track: baseStyleTrack(props),\n})\n\nconst sizes: Record<string, PartsStyleObject<typeof parts>> = {\n  xs: {\n    track: { h: \"0.25rem\" },\n  },\n  sm: {\n    track: { h: \"0.5rem\" },\n  },\n  md: {\n    track: { h: \"0.75rem\" },\n  },\n  lg: {\n    track: { h: \"1rem\" },\n  },\n}\n\nconst defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\",\n}\n\nexport default {\n  parts: parts.keys,\n  sizes,\n  baseStyle,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}