{"ast":null,"code":"import { isBrowser } from \"./dom\";\nfunction getUserAgentBrowser(navigator) {\n  var {\n    userAgent: ua,\n    vendor\n  } = navigator;\n  var android = /(android)/i.test(ua);\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\";\n    case /Edg\\//.test(ua):\n      return \"Edge\";\n    case android && /Silk\\//.test(ua):\n      return \"Silk\";\n    case /Chrome/.test(ua) && /Google Inc/.test(vendor):\n      return \"Chrome\";\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\";\n    case android:\n      return \"AOSP\";\n    case /MSIE|Trident/.test(ua):\n      return \"IE\";\n    case /Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua):\n      return \"Safari\";\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\";\n    default:\n      return null;\n  }\n}\nfunction getUserAgentOS(navigator) {\n  var {\n    userAgent: ua,\n    platform\n  } = navigator;\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\";\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\";\n    case /Win/.test(platform):\n      return \"Windows\";\n    case /Mac/.test(platform):\n      return \"Mac\";\n    case /CrOS/.test(ua):\n      return \"Chrome OS\";\n    case /Firefox/.test(ua):\n      return \"Firefox OS\";\n    default:\n      return null;\n  }\n}\nexport function detectDeviceType(navigator) {\n  var {\n    userAgent: ua\n  } = navigator;\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua)) return \"tablet\";\n  if (/(mobi)/i.test(ua)) return \"phone\";\n  return \"desktop\";\n}\nexport function detectOS(os) {\n  if (!isBrowser) return false;\n  return getUserAgentOS(window.navigator) === os;\n}\nexport function detectBrowser(browser) {\n  if (!isBrowser) return false;\n  return getUserAgentBrowser(window.navigator) === browser;\n}\nexport function detectTouch() {\n  if (!isBrowser) return false;\n  return window.ontouchstart === null && window.ontouchmove === null && window.ontouchend === null;\n}","map":{"version":3,"sources":["../../src/user-agent.ts"],"names":["isBrowser","getUserAgentBrowser","navigator","userAgent","ua","vendor","android","test","getUserAgentOS","platform","detectDeviceType","detectOS","os","window","detectBrowser","browser","detectTouch","ontouchstart","ontouchmove","ontouchend"],"mappings":"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","sourcesContent":["import { isBrowser } from \"./dom\"\n\nfunction getUserAgentBrowser(navigator: Navigator) {\n  const { userAgent: ua, vendor } = navigator\n  const android = /(android)/i.test(ua)\n\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\"\n    case /Edg\\//.test(ua):\n      return \"Edge\"\n    case android && /Silk\\//.test(ua):\n      return \"Silk\"\n    case /Chrome/.test(ua) && /Google Inc/.test(vendor):\n      return \"Chrome\"\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\"\n    case android:\n      return \"AOSP\"\n    case /MSIE|Trident/.test(ua):\n      return \"IE\"\n    case /Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua):\n      return \"Safari\"\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\"\n    default:\n      return null\n  }\n}\n\nexport type UserAgentBrowser = NonNullable<\n  ReturnType<typeof getUserAgentBrowser>\n>\n\nfunction getUserAgentOS(navigator: Navigator) {\n  const { userAgent: ua, platform } = navigator\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\"\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\"\n    case /Win/.test(platform):\n      return \"Windows\"\n    case /Mac/.test(platform):\n      return \"Mac\"\n    case /CrOS/.test(ua):\n      return \"Chrome OS\"\n    case /Firefox/.test(ua):\n      return \"Firefox OS\"\n    default:\n      return null\n  }\n}\n\nexport type UserAgentOS = NonNullable<ReturnType<typeof getUserAgentOS>>\n\nexport function detectDeviceType(navigator: Navigator) {\n  const { userAgent: ua } = navigator\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua)) return \"tablet\"\n  if (/(mobi)/i.test(ua)) return \"phone\"\n  return \"desktop\"\n}\n\nexport type UserAgentDeviceType = NonNullable<\n  ReturnType<typeof detectDeviceType>\n>\n\nexport function detectOS(os: UserAgentOS) {\n  if (!isBrowser) return false\n  return getUserAgentOS(window.navigator) === os\n}\n\nexport function detectBrowser(browser: UserAgentBrowser) {\n  if (!isBrowser) return false\n  return getUserAgentBrowser(window.navigator) === browser\n}\n\nexport function detectTouch() {\n  if (!isBrowser) return false\n  return (\n    window.ontouchstart === null &&\n    window.ontouchmove === null &&\n    window.ontouchend === null\n  )\n}\n"]},"metadata":{},"sourceType":"module"}