{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles, useTheme } from \"@chakra-ui/system\";\nimport { cx, runIfFn, __DEV__ } from \"@chakra-ui/utils\";\nimport { motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { MenuDescendantsProvider, MenuProvider, useMenu, useMenuButton, useMenuContext, useMenuItem, useMenuList, useMenuOption, useMenuOptionGroup, useMenuPositioner } from \"./use-menu\";\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\nexport var Menu = props => {\n  var {\n    children\n  } = props;\n  var styles = useMultiStyleConfig(\"Menu\", props);\n  var ownProps = omitThemingProps(props);\n  var {\n    direction\n  } = useTheme();\n  var _useMenu = useMenu(_extends({}, ownProps, {\n      direction\n    })),\n    {\n      descendants\n    } = _useMenu,\n    ctx = _objectWithoutPropertiesLoose(_useMenu, [\"descendants\"]);\n  var context = React.useMemo(() => ctx, [ctx]);\n  var {\n    isOpen,\n    onClose,\n    forceUpdate\n  } = context;\n  return /*#__PURE__*/React.createElement(MenuDescendantsProvider, {\n    value: descendants\n  }, /*#__PURE__*/React.createElement(MenuProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, runIfFn(children, {\n    isOpen,\n    onClose,\n    forceUpdate\n  }))));\n};\nif (__DEV__) {\n  Menu.displayName = \"Menu\";\n}\nvar StyledMenuButton = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    ref: ref\n  }, props, {\n    __css: _extends({\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      outline: 0\n    }, styles.button)\n  }));\n});\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\n\nexport var MenuButton = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      as: As\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"children\", \"as\"]);\n  var buttonProps = useMenuButton(rest, ref);\n  var Element = As || StyledMenuButton;\n  return /*#__PURE__*/React.createElement(Element, _extends({}, buttonProps, {\n    className: cx(\"chakra-menu__menu-button\", props.className)\n  }), /*#__PURE__*/React.createElement(chakra.span, {\n    __css: {\n      pointerEvents: \"none\",\n      flex: \"1 1 auto\",\n      minW: 0\n    }\n  }, props.children));\n});\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\";\n}\nvar motionVariants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\"\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\"\n    }\n  }\n}; // @future: only call `motion(chakra.div)` when we drop framer-motion v3 support\n\nvar MotionDiv = \"custom\" in motion ? motion.custom(chakra.div) : motion(chakra.div);\nexport var MenuList = /*#__PURE__*/forwardRef((props, ref) => {\n  var _props$zIndex, _styles$list;\n  var {\n      rootProps\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"rootProps\"]);\n  var {\n    isOpen,\n    onTransitionEnd\n  } = useMenuContext();\n  var menulistProps = useMenuList(rest, ref);\n  var positionerProps = useMenuPositioner(rootProps);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, positionerProps, {\n    __css: {\n      zIndex: (_props$zIndex = props.zIndex) != null ? _props$zIndex : (_styles$list = styles.list) == null ? void 0 : _styles$list.zIndex\n    }\n  }), /*#__PURE__*/React.createElement(MotionDiv, _extends({}, menulistProps, {\n    /**\n     * We could call this on either `onAnimationComplete` or `onUpdate`.\n     * It seems the re-focusing works better with the `onUpdate`\n     */\n    onUpdate: onTransitionEnd,\n    className: cx(\"chakra-menu__menu-list\", menulistProps.className),\n    variants: motionVariants,\n    initial: false,\n    animate: isOpen ? \"enter\" : \"exit\",\n    __css: _extends({\n      outline: 0\n    }, styles.list)\n  })));\n});\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\";\n}\nvar StyledMenuItem = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      type\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"type\"]);\n  var styles = useStyles();\n  /**\n   * Given another component, use its type if present\n   * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n   * Else, fall back to \"button\"\n   */\n\n  var btnType = rest.as ? type != null ? type : undefined : \"button\";\n  var buttonStyles = _extends({\n    textDecoration: \"none\",\n    color: \"inherit\",\n    userSelect: \"none\",\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\",\n    textAlign: \"start\",\n    flex: \"0 0 auto\",\n    outline: 0\n  }, styles.item);\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    ref: ref,\n    type: btnType\n  }, rest, {\n    __css: buttonStyles\n  }));\n});\nexport var MenuItem = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      icon,\n      iconSpacing = \"0.75rem\",\n      command,\n      commandSpacing = \"0.75rem\",\n      children\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"icon\", \"iconSpacing\", \"command\", \"commandSpacing\", \"children\"]);\n  var menuitemProps = useMenuItem(rest, ref);\n  var shouldWrap = icon || command;\n  var _children = shouldWrap ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      pointerEvents: \"none\",\n      flex: 1\n    }\n  }, children) : children;\n  return /*#__PURE__*/React.createElement(StyledMenuItem, _extends({}, menuitemProps, {\n    className: cx(\"chakra-menu__menuitem\", menuitemProps.className)\n  }), icon && /*#__PURE__*/React.createElement(MenuIcon, {\n    fontSize: \"0.8em\",\n    marginEnd: iconSpacing\n  }, icon), _children, command && /*#__PURE__*/React.createElement(MenuCommand, {\n    marginStart: commandSpacing\n  }, command));\n});\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\";\n}\nvar CheckIcon = props => /*#__PURE__*/React.createElement(\"svg\", _extends({\n  viewBox: \"0 0 14 14\",\n  width: \"1em\",\n  height: \"1em\"\n}, props), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"currentColor\",\n  points: \"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n}));\nexport var MenuItemOption = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      icon,\n      iconSpacing = \"0.75rem\"\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"icon\", \"iconSpacing\"]);\n  var optionProps = useMenuOption(rest, ref);\n  return /*#__PURE__*/React.createElement(StyledMenuItem, _extends({}, optionProps, {\n    className: cx(\"chakra-menu__menuitem-option\", rest.className)\n  }), /*#__PURE__*/React.createElement(MenuIcon, {\n    fontSize: \"0.8em\",\n    marginEnd: iconSpacing,\n    opacity: props.isChecked ? 1 : 0\n  }, icon || /*#__PURE__*/React.createElement(CheckIcon, null)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      flex: 1\n    }\n  }, optionProps.children));\n});\nMenuItemOption.id = \"MenuItemOption\";\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\";\n}\nexport var MenuOptionGroup = props => {\n  var {\n      className,\n      title\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"className\", \"title\"]);\n  var ownProps = useMenuOptionGroup(rest);\n  return /*#__PURE__*/React.createElement(MenuGroup, _extends({\n    title: title,\n    className: cx(\"chakra-menu__option-group\", className)\n  }, ownProps));\n};\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\";\n}\nexport var MenuGroup = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      title,\n      children,\n      className\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"title\", \"children\", \"className\"]);\n  var _className = cx(\"chakra-menu__group__title\", className);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: \"chakra-menu__group\",\n    role: \"group\"\n  }, title && /*#__PURE__*/React.createElement(chakra.p, _extends({\n    className: _className\n  }, rest, {\n    __css: styles.groupTitle\n  }), title), children);\n});\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\";\n}\nexport var MenuCommand = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, props, {\n    __css: styles.command,\n    className: \"chakra-menu__command\"\n  }));\n});\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\";\n}\nexport var MenuIcon = props => {\n  var {\n      className,\n      children\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"className\", \"children\"]);\n  var child = React.Children.only(children);\n  var clone = /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n    focusable: \"false\",\n    \"aria-hidden\": true,\n    className: cx(\"chakra-menu__icon\", child.props.className)\n  }) : null;\n  var _className = cx(\"chakra-menu__icon-wrapper\", className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: _className\n  }, rest, {\n    __css: {\n      flexShrink: 0\n    }\n  }), clone);\n};\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\";\n}\nexport var MenuDivider = props => {\n  var {\n      className\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.hr, _extends({\n    role: \"separator\",\n    \"aria-orientation\": \"horizontal\",\n    className: cx(\"chakra-menu__divider\", className)\n  }, rest, {\n    __css: styles.divider\n  }));\n};\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\";\n}","map":{"version":3,"sources":["../../src/menu.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","useTheme","cx","runIfFn","__DEV__","motion","React","MenuDescendantsProvider","MenuProvider","useMenu","useMenuButton","useMenuContext","useMenuItem","useMenuList","useMenuOption","useMenuOptionGroup","useMenuPositioner","Menu","props","children","styles","ownProps","direction","descendants","ctx","context","useMemo","isOpen","onClose","forceUpdate","displayName","StyledMenuButton","ref","display","appearance","alignItems","outline","button","MenuButton","as","As","rest","buttonProps","Element","className","pointerEvents","flex","minW","motionVariants","enter","visibility","opacity","scale","transition","duration","ease","exit","transitionEnd","easings","MotionDiv","custom","div","MenuList","rootProps","onTransitionEnd","menulistProps","positionerProps","zIndex","list","StyledMenuItem","type","btnType","undefined","buttonStyles","textDecoration","color","userSelect","width","textAlign","item","MenuItem","icon","iconSpacing","command","commandSpacing","menuitemProps","shouldWrap","_children","CheckIcon","MenuItemOption","optionProps","isChecked","id","MenuOptionGroup","title","MenuGroup","_className","groupTitle","MenuCommand","MenuIcon","child","Children","only","clone","isValidElement","cloneElement","focusable","flexShrink","MenuDivider","divider"],"mappings":"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","sourcesContent":["import { MaybeRenderProp } from \"@chakra-ui/react-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  PropsOf,\n  StylesProvider,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { cx, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { CustomDomComponent, motion, Variants } from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  MenuDescendantsProvider,\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuContext,\n  useMenuItem,\n  UseMenuItemProps,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  UseMenuOptionGroupProps,\n  UseMenuOptionOptions,\n  useMenuPositioner,\n  UseMenuProps,\n} from \"./use-menu\"\n\nexport interface MenuProps extends UseMenuProps, ThemingProps<\"Menu\"> {\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | undefined\n  }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n  const { direction } = useTheme()\n  const { descendants, ...ctx } = useMenu({ ...ownProps, direction })\n  const context = React.useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose, forceUpdate } = context\n\n  return (\n    <MenuDescendantsProvider value={descendants}>\n      <MenuProvider value={context}>\n        <StylesProvider value={styles}>\n          {runIfFn(children, { isOpen, onClose, forceUpdate })}\n        </StylesProvider>\n      </MenuProvider>\n    </MenuDescendantsProvider>\n  )\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\"\n}\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">((props, ref) => {\n  const styles = useStyles()\n  return (\n    <chakra.button\n      ref={ref}\n      {...props}\n      __css={{\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        ...styles.button,\n      }}\n    />\n  )\n})\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const Element = As || StyledMenuButton\n\n    return (\n      <Element\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span\n          __css={{ pointerEvents: \"none\", flex: \"1 1 auto\", minW: 0 }}\n        >\n          {props.children}\n        </chakra.span>\n      </Element>\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\"\n}\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {\n  rootProps?: HTMLChakraProps<\"div\">\n}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\n// @future: only call `motion(chakra.div)` when we drop framer-motion v3 support\nconst MotionDiv: CustomDomComponent<PropsOf<typeof chakra.div>> =\n  \"custom\" in motion\n    ? (motion as any).custom(chakra.div)\n    : (motion as any)(chakra.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">((props, ref) => {\n  const { rootProps, ...rest } = props\n  const { isOpen, onTransitionEnd } = useMenuContext()\n\n  const menulistProps = useMenuList(rest, ref) as HTMLAttributes\n  const positionerProps = useMenuPositioner(rootProps)\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      {...positionerProps}\n      __css={{ zIndex: props.zIndex ?? styles.list?.zIndex }}\n    >\n      <MotionDiv\n        {...menulistProps}\n        /**\n         * We could call this on either `onAnimationComplete` or `onUpdate`.\n         * It seems the re-focusing works better with the `onUpdate`\n         */\n        onUpdate={onTransitionEnd}\n        className={cx(\"chakra-menu__menu-list\", menulistProps.className)}\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{\n          outline: 0,\n          ...styles.list,\n        }}\n      />\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\"\n}\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  (props, ref) => {\n    const { type, ...rest } = props\n    const styles = useStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const btnType = rest.as ? type ?? undefined : \"button\"\n\n    const buttonStyles: SystemStyleObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"start\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      ...styles.item,\n    }\n\n    return (\n      <chakra.button ref={ref} type={btnType} {...rest} __css={buttonStyles} />\n    )\n  },\n)\n\ninterface MenuItemOptions\n  extends Pick<\n    UseMenuItemProps,\n    \"isDisabled\" | \"isFocusable\" | \"closeOnSelect\"\n  > {\n  /**\n   * The icon to render before the menu item's label.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label.\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n  /**\n   * The spacing between the command and menu item's label.\n   * @type SystemProps[\"ml\"]\n   */\n  commandSpacing?: SystemProps[\"ml\"]\n}\n\ntype HTMLAttributes = React.HTMLAttributes<HTMLElement>\n\nexport interface MenuItemProps\n  extends HTMLChakraProps<\"button\">,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props\n\n  const menuitemProps = useMenuItem(rest, ref) as HTMLAttributes\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <span style={{ pointerEvents: \"none\", flex: 1 }}>{children}</span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuitemProps}\n      className={cx(\"chakra-menu__menuitem\", menuitemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" marginEnd={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && (\n        <MenuCommand marginStart={commandSpacing}>{command}</MenuCommand>\n      )}\n    </StyledMenuItem>\n  )\n})\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\"\n}\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions> {\n  /**\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  (props, ref) => {\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref) as HTMLAttributes\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        <MenuIcon\n          fontSize=\"0.8em\"\n          marginEnd={iconSpacing}\n          opacity={props.isChecked ? 1 : 0}\n        >\n          {icon || <CheckIcon />}\n        </MenuIcon>\n        <span style={{ flex: 1 }}>{optionProps.children}</span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\"\n}\n\nexport interface MenuOptionGroupProps\n  extends UseMenuOptionGroupProps,\n    Omit<MenuGroupProps, \"value\" | \"defaultValue\" | \"onChange\"> {}\n\nexport const MenuOptionGroup: React.FC<MenuOptionGroupProps> = (props) => {\n  const { className, title, ...rest } = props\n  const ownProps = useMenuOptionGroup(rest)\n  return (\n    <MenuGroup\n      title={title}\n      className={cx(\"chakra-menu__option-group\", className)}\n      {...ownProps}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\"\n}\n\nexport interface MenuGroupProps extends HTMLChakraProps<\"div\"> {}\n\nexport const MenuGroup = forwardRef<MenuGroupProps, \"div\">((props, ref) => {\n  const { title, children, className, ...rest } = props\n\n  const _className = cx(\"chakra-menu__group__title\", className)\n  const styles = useStyles()\n\n  return (\n    <div ref={ref} className=\"chakra-menu__group\" role=\"group\">\n      {title && (\n        <chakra.p className={_className} {...rest} __css={styles.groupTitle}>\n          {title}\n        </chakra.p>\n      )}\n      {children}\n    </div>\n  )\n})\n\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\"\n}\n\nexport interface MenuCommandProps extends HTMLChakraProps<\"span\"> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  (props, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\"\n}\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement(child)\n    ? React.cloneElement(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span\n      className={_className}\n      {...rest}\n      __css={{\n        flexShrink: 0,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\"\n}\n\nexport interface MenuDividerProps extends HTMLChakraProps<\"hr\"> {}\n\nexport const MenuDivider: React.FC<MenuDividerProps> = (props) => {\n  const { className, ...rest } = props\n  const styles = useStyles()\n  return (\n    <chakra.hr\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      className={cx(\"chakra-menu__divider\", className)}\n      {...rest}\n      __css={styles.divider}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\"\n}\n"]},"metadata":{},"sourceType":"module"}