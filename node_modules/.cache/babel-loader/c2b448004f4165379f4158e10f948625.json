{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nexport function getIds(id) {\n  return {\n    root: \"slider-root-\" + id,\n    getThumb: i => \"slider-thumb-\" + id + \"-\" + i,\n    getInput: i => \"slider-input-\" + id + \"-\" + i,\n    track: \"slider-track-\" + id,\n    innerTrack: \"slider-filled-track-\" + id,\n    getMarker: i => \"slider-marker-\" + id + \"-\" + i,\n    output: \"slider-output-\" + id\n  };\n}\nexport function orient(options) {\n  var {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nvar zeroRect = {\n  width: 0,\n  height: 0\n};\nexport function getStyles(options) {\n  var {\n    orientation,\n    thumbPercents,\n    thumbRects,\n    isReversed\n  } = options;\n  var getThumbStyle = i => _extends({\n    position: \"absolute\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    msUserSelect: \"none\",\n    touchAction: \"none\"\n  }, orient({\n    orientation,\n    vertical: {\n      bottom: \"calc(\" + thumbPercents[i] + \"% - \" + thumbRects[i].height / 2 + \"px)\"\n    },\n    horizontal: {\n      left: \"calc(\" + thumbPercents[i] + \"% - \" + thumbRects[i].width / 2 + \"px)\"\n    }\n  }));\n  var size = orientation === \"vertical\" ? thumbRects.reduce((a, b) => a.height > b.height ? a : b, zeroRect) : thumbRects.reduce((a, b) => a.width > b.width ? a : b, zeroRect);\n  var rootStyle = _extends({\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0\n  }, orient({\n    orientation,\n    vertical: {\n      paddingLeft: size.width / 2,\n      paddingRight: size.width / 2\n    },\n    horizontal: {\n      paddingTop: size.height / 2,\n      paddingBottom: size.height / 2\n    }\n  }));\n  var trackStyle = _extends({\n    position: \"absolute\"\n  }, orient({\n    orientation,\n    vertical: {\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      height: \"100%\"\n    },\n    horizontal: {\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      width: \"100%\"\n    }\n  }));\n  var isSingleThumb = thumbPercents.length === 1;\n  var fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];\n  var range = isSingleThumb ? fallback : thumbPercents;\n  var start = range[0];\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start;\n  }\n  var percent = Math.abs(range[range.length - 1] - range[0]);\n  var innerTrackStyle = _extends({}, trackStyle, orient({\n    orientation,\n    vertical: isReversed ? {\n      height: percent + \"%\",\n      top: start + \"%\"\n    } : {\n      height: percent + \"%\",\n      bottom: start + \"%\"\n    },\n    horizontal: isReversed ? {\n      width: percent + \"%\",\n      right: start + \"%\"\n    } : {\n      width: percent + \"%\",\n      left: start + \"%\"\n    }\n  }));\n  return {\n    trackStyle,\n    innerTrackStyle,\n    rootStyle,\n    getThumbStyle\n  };\n}\nexport function getIsReversed(options) {\n  var {\n    isReversed,\n    direction,\n    orientation\n  } = options;\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed;\n  } // only flip for horizontal RTL\n  // if isReserved ðŸ”œ  otherwise  ðŸ”š\n\n  return !isReversed;\n}","map":{"version":3,"sources":["../../src/slider-utils.ts"],"names":["getIds","id","root","getThumb","i","getInput","track","innerTrack","getMarker","output","orient","options","orientation","vertical","horizontal","zeroRect","width","height","getStyles","thumbPercents","thumbRects","isReversed","getThumbStyle","position","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","touchAction","bottom","left","size","reduce","a","b","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","top","isSingleThumb","length","fallback","range","start","percent","Math","abs","innerTrackStyle","right","getIsReversed","direction"],"mappings":"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","sourcesContent":["import type { CSSProperties } from \"react\"\n\nexport function getIds(id: string | number) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: (i: number) => `slider-thumb-${id}-${i}`,\n    getInput: (i: number) => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: (i: number) => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`,\n  }\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport function orient(options: {\n  orientation: Orientation\n  vertical: CSSProperties\n  horizontal: CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\ntype Size = { height: number; width: number }\n\nconst zeroRect: Size = { width: 0, height: 0 }\n\nexport function getStyles(options: {\n  orientation: Orientation\n  thumbPercents: number[]\n  thumbRects: Size[]\n  isReversed?: boolean\n}) {\n  const { orientation, thumbPercents, thumbRects, isReversed } = options\n\n  const getThumbStyle = (i: number): CSSProperties => ({\n    position: \"absolute\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    msUserSelect: \"none\",\n    touchAction: \"none\",\n    ...orient({\n      orientation,\n      vertical: {\n        bottom: `calc(${thumbPercents[i]}% - ${thumbRects[i].height / 2}px)`,\n      },\n      horizontal: {\n        left: `calc(${thumbPercents[i]}% - ${thumbRects[i].width / 2}px)`,\n      },\n    }),\n  })\n\n  const size =\n    orientation === \"vertical\"\n      ? thumbRects.reduce((a, b) => (a.height > b.height ? a : b), zeroRect)\n      : thumbRects.reduce((a, b) => (a.width > b.width ? a : b), zeroRect)\n\n  const rootStyle: CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: {\n        paddingLeft: size.width / 2,\n        paddingRight: size.width / 2,\n      },\n      horizontal: {\n        paddingTop: size.height / 2,\n        paddingBottom: size.height / 2,\n      },\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const isSingleThumb = thumbPercents.length === 1\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]]\n  const range = isSingleThumb ? fallback : thumbPercents\n\n  let start = range[0]\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start\n  }\n  const percent = Math.abs(range[range.length - 1] - range[0])\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${percent}%`, top: `${start}%` }\n        : { height: `${percent}%`, bottom: `${start}%` },\n      horizontal: isReversed\n        ? { width: `${percent}%`, right: `${start}%` }\n        : { width: `${percent}%`, left: `${start}%` },\n    }),\n  }\n\n  return { trackStyle, innerTrackStyle, rootStyle, getThumbStyle }\n}\n\nexport function getIsReversed(options: {\n  isReversed?: boolean\n  direction: \"ltr\" | \"rtl\"\n  orientation?: \"horizontal\" | \"vertical\"\n}) {\n  const { isReversed, direction, orientation } = options\n\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed\n  }\n  // only flip for horizontal RTL\n  // if isReserved ðŸ”œ  otherwise  ðŸ”š\n  return !isReversed\n}\n"]},"metadata":{},"sourceType":"module"}