{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport initializeAuthentication from '../config/firebase';\n\n//initialize firebase  authentication\ninitializeAuthentication();\nconst useFirebase = () => {\n  _s();\n  const [user, setUser] = useState({});\n  const auth = getAuth();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n\n  //on State Change \n  useEffect(() => {\n    const unsubscribed = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n      setIsLoading(false);\n    });\n    return () => unsubscribed;\n  }, [auth]);\n\n  //sign up functionality\n  const signUpUser = async (email, password) => {\n    try {\n      const userCredential = await firebase.auth().createUserWithEmailAndPassword(email, password);\n      // Automatically sign in after signup\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n      return userCredential;\n    } catch (error) {\n      console.error(\"Error signing up:\", error);\n      throw error;\n    }\n  };\n\n  //sign in functionality\n  const signInUser = async (email, password) => {\n    setIsLoading(true);\n    await signInWithEmailAndPassword(auth, email, password).then(res => {\n      setUser(res.user);\n      swal(\"Sign in Successful!\", \"Welcome back !\", \"info\");\n      history.push('/');\n      window.scrollTo(0, 100);\n    }).catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\")).finally(() => setIsLoading(false));\n  };\n\n  //google sign in \n  const signInWithGoogle = async () => {\n    setIsLoading(true);\n    const googleProvider = new GoogleAuthProvider();\n    await signInWithPopup(auth, googleProvider).then(res => {\n      setUser(res.user);\n      swal(\"Good job!\", \"Account has been created!\", \"success\");\n      history.push('/');\n    }).catch(err => console.log(err.message)).finally(() => setIsLoading(false));\n  };\n\n  // sign out \n  const signOutUser = async () => {\n    setIsLoading(true);\n    await signOut(auth).then(() => {\n      setUser({});\n      swal(\"Logout Successful!\", \"You are logged out!\", \"success\");\n      history.push('/signin');\n    }).catch(err => {\n      swal(\"Something went wrong!\", `${err.message}`, \"error\");\n    }).finally(() => setIsLoading(false));\n  };\n  return {\n    user,\n    signInUser,\n    signUpUser,\n    signOutUser,\n    signInWithGoogle,\n    isLoading\n  };\n};\n_s(useFirebase, \"o9TOeKgZZnjpaHY94AVr78qCgsc=\", false, function () {\n  return [useHistory];\n});\nexport default useFirebase;","map":{"version":3,"names":["createUserWithEmailAndPassword","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithEmailAndPassword","signInWithPopup","signOut","updateProfile","useEffect","useState","useHistory","swal","initializeAuthentication","useFirebase","_s","user","setUser","auth","history","isLoading","setIsLoading","unsubscribed","signUpUser","email","password","userCredential","firebase","error","console","signInUser","then","res","push","window","scrollTo","catch","err","message","finally","signInWithGoogle","googleProvider","log","signOutUser"],"sources":["E:/Pr/Web D/MedSync/src/hooks/useFirebase.js"],"sourcesContent":["import { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"firebase/auth\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport initializeAuthentication from '../config/firebase';\r\n\r\n//initialize firebase  authentication\r\ninitializeAuthentication()\r\n\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n    const auth = getAuth();\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    //on State Change \r\n    useEffect(() => {\r\n        const unsubscribed = onAuthStateChanged(auth, user => {\r\n            if (user) {\r\n                setUser(user)\r\n            }else{\r\n                setUser({})\r\n            }\r\n            setIsLoading(false);\r\n        })\r\n        return () => unsubscribed;\r\n\r\n    }, [auth])\r\n\r\n\r\n    //sign up functionality\r\n    const signUpUser = async (email, password) => {\r\n        try {\r\n            const userCredential = await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n            // Automatically sign in after signup\r\n            await firebase.auth().signInWithEmailAndPassword(email, password);\r\n            return userCredential;\r\n        } catch (error) {\r\n            console.error(\"Error signing up:\", error);\r\n            throw error;\r\n        }\r\n    };\r\n    \r\n\r\n    //sign in functionality\r\n    const signInUser = async (email, password) => {\r\n        setIsLoading(true);\r\n        await signInWithEmailAndPassword(auth, email, password)\r\n            .then(res => {\r\n                setUser(res.user);\r\n                swal(\"Sign in Successful!\", \"Welcome back !\", \"info\")\r\n                history.push('/');\r\n                                    window.scrollTo(0, 100);\r\n\r\n            })\r\n            .catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\")).finally(() => setIsLoading(false));\r\n    }\r\n\r\n    //google sign in \r\n    const signInWithGoogle = async () => {\r\n        setIsLoading(true);\r\n        const googleProvider = new GoogleAuthProvider();\r\n        await signInWithPopup(auth, googleProvider)\r\n            .then(res => {\r\n                setUser(res.user);\r\n                swal(\"Good job!\", \"Account has been created!\", \"success\");\r\n                history.push('/');\r\n            }).catch(err => console.log(err.message)).finally(() => setIsLoading(false));\r\n    }\r\n\r\n\r\n    // sign out \r\n    const signOutUser = async () => {\r\n        setIsLoading(true);\r\n        await signOut(auth).then(() => {\r\n            setUser({});\r\n            swal(\"Logout Successful!\", \"You are logged out!\", \"success\");\r\n            history.push('/signin')\r\n        }).catch((err) => {\r\n            swal(\"Something went wrong!\", `${err.message}`, \"error\")\r\n        }).finally(() => setIsLoading(false));\r\n\r\n    }\r\n\r\n\r\n    return {\r\n        user,\r\n        signInUser,\r\n        signUpUser,\r\n        signOutUser,\r\n        signInWithGoogle,\r\n        isLoading\r\n    }\r\n}\r\n\r\nexport default useFirebase\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}