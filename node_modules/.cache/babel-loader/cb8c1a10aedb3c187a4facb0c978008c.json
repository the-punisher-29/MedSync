{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { getValidChildren } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\n\n/**\n * React component that separates each breadcrumb link\n */\nexport var BreadcrumbSeparator = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      spacing\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"spacing\"]);\n  var styles = useStyles();\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\nexport var BreadcrumbLink = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      isCurrentPage,\n      as,\n      className\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"as\", \"className\"]);\n  var styles = useStyles();\n  var sharedProps = _extends({\n    ref,\n    as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link\n  }, sharedProps));\n});\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nexport var BreadcrumbItem = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"]);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(child => {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  var styles = useStyles();\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nexport var Breadcrumb = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n  var {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className\n    } = ownProps,\n    rest = _objectWithoutPropertiesLoose(ownProps, [\"children\", \"spacing\", \"separator\", \"className\"]);\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map((child, index) => /*#__PURE__*/React.cloneElement(child, {\n    separator,\n    spacing,\n    isLastChild: count === index + 1\n  }));\n  var _className = cx(\"chakra-breadcrumb\", className);\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}","map":{"version":3,"sources":["../../src/breadcrumb.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","__DEV__","getValidChildren","React","BreadcrumbSeparator","props","ref","spacing","rest","styles","separatorStyles","mx","separator","displayName","BreadcrumbLink","isCurrentPage","as","className","sharedProps","link","BreadcrumbItem","isLastChild","children","validChildren","clones","map","child","type","cloneElement","itemStyles","display","alignItems","item","_className","Breadcrumb","ownProps","count","length","index","container"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { getValidChildren } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\n\nexport interface BreadcrumbSeparatorProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * @type SystemProps[\"mx\"]\n   */\n  spacing?: SystemProps[\"mx\"]\n}\n\n/**\n * React component that separates each breadcrumb link\n */\nexport const BreadcrumbSeparator = forwardRef<BreadcrumbSeparatorProps, \"span\">(\n  (props, ref) => {\n    const { spacing, ...rest } = props\n\n    const styles = useStyles()\n    const separatorStyles: SystemStyleObject = {\n      mx: spacing,\n      ...styles.separator,\n    }\n\n    return (\n      <chakra.span\n        ref={ref}\n        role=\"presentation\"\n        {...rest}\n        __css={separatorStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n}\n\nexport interface BreadcrumbLinkProps extends HTMLChakraProps<\"a\"> {\n  isCurrentPage?: boolean\n}\n\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\nexport const BreadcrumbLink = forwardRef<BreadcrumbLinkProps, \"a\">(\n  (props, ref) => {\n    const { isCurrentPage, as, className, ...rest } = props\n    const styles = useStyles()\n\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest,\n    }\n\n    if (isCurrentPage) {\n      return (\n        <chakra.span aria-current=\"page\" __css={styles.link} {...sharedProps} />\n      )\n    }\n\n    return <chakra.a __css={styles.link} {...sharedProps} />\n  },\n)\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\"\n}\n\ninterface BreadcrumbItemOptions extends BreadcrumbOptions {\n  isCurrentPage?: boolean\n  isLastChild?: boolean\n}\n\nexport interface BreadcrumbItemProps\n  extends BreadcrumbItemOptions,\n    HTMLChakraProps<\"li\"> {}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nexport const BreadcrumbItem = forwardRef<BreadcrumbItemProps, \"li\">(\n  (props, ref) => {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props\n\n    const validChildren = getValidChildren(children)\n\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return React.cloneElement(child, {\n          isCurrentPage,\n        })\n      }\n\n      if (child.type === BreadcrumbSeparator) {\n        return React.cloneElement(child, {\n          spacing,\n          children: child.props.children || separator,\n        })\n      }\n\n      return child\n    })\n\n    const styles = useStyles()\n    const itemStyles: SystemStyleObject = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item,\n    }\n\n    const _className = cx(\"chakra-breadcrumb__list-item\", className)\n\n    return (\n      <chakra.li ref={ref} className={_className} {...rest} __css={itemStyles}>\n        {clones}\n        {!isLastChild && (\n          <BreadcrumbSeparator spacing={spacing}>\n            {separator}\n          </BreadcrumbSeparator>\n        )}\n      </chakra.li>\n    )\n  },\n)\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\"\n}\n\nexport interface BreadcrumbOptions {\n  /**\n   * The visual separator between each breadcrumb item\n   * @type string | React.ReactElement\n   */\n  separator?: string | React.ReactElement\n  /**\n   * The left and right margin applied to the separator\n   * @type SystemProps[\"mx\"]\n   */\n  spacing?: SystemProps[\"mx\"]\n}\n\nexport interface BreadcrumbProps\n  extends HTMLChakraProps<\"nav\">,\n    BreadcrumbOptions,\n    ThemingProps<\"Breadcrumb\"> {}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nexport const Breadcrumb = forwardRef<BreadcrumbProps, \"nav\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Breadcrumb\", props)\n  const ownProps = omitThemingProps(props)\n\n  const {\n    children,\n    spacing = \"0.5rem\",\n    separator = \"/\",\n    className,\n    ...rest\n  } = ownProps\n\n  const validChildren = getValidChildren(children)\n  const count = validChildren.length\n\n  const clones = validChildren.map((child, index) =>\n    React.cloneElement(child, {\n      separator,\n      spacing,\n      isLastChild: count === index + 1,\n    }),\n  )\n\n  const _className = cx(\"chakra-breadcrumb\", className)\n\n  return (\n    <chakra.nav\n      ref={ref}\n      aria-label=\"breadcrumb\"\n      className={_className}\n      __css={styles.container}\n      {...rest}\n    >\n      <StylesProvider value={styles}>\n        <chakra.ol className=\"chakra-breadcrumb__list\">{clones}</chakra.ol>\n      </StylesProvider>\n    </chakra.nav>\n  )\n})\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\"\n}\n"]},"metadata":{},"sourceType":"module"}