{"ast":null,"code":"var _jsxFileName = \"/Users/arman_gupta/Documents/GitHub/MedSync/src/contexts/OrderProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderContext = /*#__PURE__*/createContext();\nexport const OrderProvider = ({\n  children\n}) => {\n  _s();\n  const [orders, setOrders] = useState([]);\n\n  // Function to add product to the cart\n  const handleCart = product => {\n    const existingProduct = orders.find(item => item.id === product.id);\n    if (existingProduct) {\n      // Increment quantity if product already in cart\n      updateProductQuantity(product.id, existingProduct.quantity + 1);\n    } else {\n      // Add product with quantity 1 if not in cart\n      setOrders([...orders, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n  };\n\n  // Function to update product quantity\n  const updateProductQuantity = (productId, newQuantity) => {\n    setOrders(prevOrders => prevOrders.map(item => item.id === productId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n\n  // Function to remove a product from the cart\n  const removeProduct = productId => {\n    setOrders(prevOrders => prevOrders.filter(item => item.id !== productId));\n  };\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: {\n      orders,\n      handleCart,\n      updateProductQuantity,\n      removeProduct\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderProvider, \"fJydDDvPVS5YoOOIxPLx2ckW3UY=\");\n_c = OrderProvider;\nexport default OrderProvider;\nvar _c;\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","OrderContext","OrderProvider","children","_s","orders","setOrders","handleCart","product","existingProduct","find","item","id","updateProductQuantity","quantity","productId","newQuantity","prevOrders","map","removeProduct","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arman_gupta/Documents/GitHub/MedSync/src/contexts/OrderProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nexport const OrderContext = createContext();\n\nexport const OrderProvider = ({ children }) => {\n    const [orders, setOrders] = useState([]);\n\n    // Function to add product to the cart\n    const handleCart = (product) => {\n        const existingProduct = orders.find((item) => item.id === product.id);\n        if (existingProduct) {\n            // Increment quantity if product already in cart\n            updateProductQuantity(product.id, existingProduct.quantity + 1);\n        } else {\n            // Add product with quantity 1 if not in cart\n            setOrders([...orders, { ...product, quantity: 1 }]);\n        }\n    };\n\n    // Function to update product quantity\n    const updateProductQuantity = (productId, newQuantity) => {\n        setOrders((prevOrders) =>\n            prevOrders.map((item) =>\n                item.id === productId ? { ...item, quantity: newQuantity } : item\n            )\n        );\n    };\n\n    // Function to remove a product from the cart\n    const removeProduct = (productId) => {\n        setOrders((prevOrders) => prevOrders.filter((item) => item.id !== productId));\n    };\n\n    return (\n        <OrderContext.Provider value={{ orders, handleCart, updateProductQuantity, removeProduct }}>\n            {children}\n        </OrderContext.Provider>\n    );\n};\n\nexport default OrderProvider\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMS,UAAU,GAAIC,OAAO,IAAK;IAC5B,MAAMC,eAAe,GAAGJ,MAAM,CAACK,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IACrE,IAAIH,eAAe,EAAE;MACjB;MACAI,qBAAqB,CAACL,OAAO,CAACI,EAAE,EAAEH,eAAe,CAACK,QAAQ,GAAG,CAAC,CAAC;IACnE,CAAC,MAAM;MACH;MACAR,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;QAAE,GAAGG,OAAO;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IACvD;EACJ,CAAC;;EAED;EACA,MAAMD,qBAAqB,GAAGA,CAACE,SAAS,EAAEC,WAAW,KAAK;IACtDV,SAAS,CAAEW,UAAU,IACjBA,UAAU,CAACC,GAAG,CAAEP,IAAI,IAChBA,IAAI,CAACC,EAAE,KAAKG,SAAS,GAAG;MAAE,GAAGJ,IAAI;MAAEG,QAAQ,EAAEE;IAAY,CAAC,GAAGL,IACjE,CACJ,CAAC;EACL,CAAC;;EAED;EACA,MAAMQ,aAAa,GAAIJ,SAAS,IAAK;IACjCT,SAAS,CAAEW,UAAU,IAAKA,UAAU,CAACG,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKG,SAAS,CAAC,CAAC;EACjF,CAAC;EAED,oBACIf,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,MAAM;MAAEE,UAAU;MAAEM,qBAAqB;MAAEM;IAAc,CAAE;IAAAhB,QAAA,EACtFA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACtB,EAAA,CAlCWF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAoC1B,eAAeA,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}