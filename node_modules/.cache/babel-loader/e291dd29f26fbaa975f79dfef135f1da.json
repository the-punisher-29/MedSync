{"ast":null,"code":"var _s = $RefreshSig$();\n// Inside useAuth.js\nimport { auth, db } from '../components/config/firebase'; // Make sure you import your Firebase instance\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { doc, getDoc } from 'firebase/firestore';\nconst useAuth = () => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null); // Update current user to include name, etc.\n\n  const signInUser = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Fetch additional user data from Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      if (userDoc.exists()) {\n        const userData = userDoc.data();\n        setCurrentUser({\n          uid: user.uid,\n          email: user.email,\n          name: userData.name\n        });\n      }\n    } catch (error) {\n      console.error(\"Error signing in: \", error);\n    }\n  };\n  return {\n    currentUser,\n    signInUser\n  };\n};\n_s(useAuth, \"D3+eUn/eYbOcEwoCOjOk5Grmif4=\");","map":{"version":3,"names":["auth","db","signInWithEmailAndPassword","doc","getDoc","useAuth","_s","currentUser","setCurrentUser","useState","signInUser","email","password","userCredential","user","userDoc","uid","exists","userData","data","name","error","console"],"sources":["E:/Pr/Web D/MedSync/src/hooks/useAuth.js"],"sourcesContent":["// Inside useAuth.js\r\nimport { auth, db } from '../components/config/firebase' // Make sure you import your Firebase instance\r\nimport { signInWithEmailAndPassword } from 'firebase/auth'\r\nimport { doc, getDoc } from 'firebase/firestore'\r\n\r\nconst useAuth = () => {\r\n    const [currentUser, setCurrentUser] = useState(null) // Update current user to include name, etc.\r\n\r\n    const signInUser = async (email, password) => {\r\n        try {\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password)\r\n            const user = userCredential.user\r\n\r\n            // Fetch additional user data from Firestore\r\n            const userDoc = await getDoc(doc(db, 'users', user.uid))\r\n            if (userDoc.exists()) {\r\n                const userData = userDoc.data()\r\n                setCurrentUser({ uid: user.uid, email: user.email, name: userData.name })\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error signing in: \", error)\r\n        }\r\n    }\r\n\r\n    return {\r\n        currentUser,\r\n        signInUser,\r\n    }\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,IAAI,EAAEC,EAAE,QAAQ,+BAA+B,EAAC;AACzD,SAASC,0BAA0B,QAAQ,eAAe;AAC1D,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAEhD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC,EAAC;;EAErD,MAAMC,UAAU,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACA,MAAMC,cAAc,GAAG,MAAMX,0BAA0B,CAACF,IAAI,EAAEW,KAAK,EAAEC,QAAQ,CAAC;MAC9E,MAAME,IAAI,GAAGD,cAAc,CAACC,IAAI;;MAEhC;MACA,MAAMC,OAAO,GAAG,MAAMX,MAAM,CAACD,GAAG,CAACF,EAAE,EAAE,OAAO,EAAEa,IAAI,CAACE,GAAG,CAAC,CAAC;MACxD,IAAID,OAAO,CAACE,MAAM,CAAC,CAAC,EAAE;QAClB,MAAMC,QAAQ,GAAGH,OAAO,CAACI,IAAI,CAAC,CAAC;QAC/BX,cAAc,CAAC;UAAEQ,GAAG,EAAEF,IAAI,CAACE,GAAG;UAAEL,KAAK,EAAEG,IAAI,CAACH,KAAK;UAAES,IAAI,EAAEF,QAAQ,CAACE;QAAK,CAAC,CAAC;MAC7E;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC9C;EACJ,CAAC;EAED,OAAO;IACHd,WAAW;IACXG;EACJ,CAAC;AACL,CAAC;AAAAJ,EAAA,CAvBKD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}