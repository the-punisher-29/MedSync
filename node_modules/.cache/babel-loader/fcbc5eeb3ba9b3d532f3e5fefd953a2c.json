{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pr\\\\Web D\\\\MedSync\\\\src\\\\contexts\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport useFirebase from '../hooks/useFirebase'; // Custom Firebase hook\n\n// Create an AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    signInWithGoogle,\n    signOutUser\n  } = useFirebase(); // Firebase logic from useFirebase\n  const [authState, setAuthState] = useState({\n    user: null\n  });\n\n  // Listen to authentication state changes\n  useEffect(() => {\n    if (user) {\n      setAuthState({\n        user\n      }); // Set the authenticated user when available\n    } else {\n      setAuthState({\n        user: null\n      }); // No user means logged out\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...authState,\n      signInWithGoogle,\n      signOutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"fUYpoL7XzAqesLvil8n5CXdRGIE=\", false, function () {\n  return [useFirebase];\n});\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useFirebase","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","signInWithGoogle","signOutUser","authState","setAuthState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Pr/Web D/MedSync/src/contexts/AuthProvider.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport useFirebase from '../hooks/useFirebase'; // Custom Firebase hook\r\n\r\n// Create an AuthContext\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const { user, signInWithGoogle, signOutUser } = useFirebase(); // Firebase logic from useFirebase\r\n    const [authState, setAuthState] = useState({ user: null });\r\n\r\n    // Listen to authentication state changes\r\n    useEffect(() => {\r\n        if (user) {\r\n            setAuthState({ user }); // Set the authenticated user when available\r\n        } else {\r\n            setAuthState({ user: null }); // No user means logged out\r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ ...authState, signInWithGoogle, signOutUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,WAAW,MAAM,sBAAsB,CAAC,CAAC;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC,gBAAgB;IAAEC;EAAY,CAAC,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC;IAAES,IAAI,EAAE;EAAK,CAAC,CAAC;;EAE1D;EACAR,SAAS,CAAC,MAAM;IACZ,IAAIQ,IAAI,EAAE;MACNI,YAAY,CAAC;QAAEJ;MAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM;MACHI,YAAY,CAAC;QAAEJ,IAAI,EAAE;MAAK,CAAC,CAAC,CAAC,CAAC;IAClC;EACJ,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACIL,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGH,SAAS;MAAEF,gBAAgB;MAAEC;IAAY,CAAE;IAAAJ,QAAA,EACxEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACX,EAAA,CAlBIF,YAAY;EAAA,QACkCJ,WAAW;AAAA;AAAAkB,EAAA,GADzDd,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}